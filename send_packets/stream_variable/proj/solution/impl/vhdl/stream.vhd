-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    candin_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    candin_V_ce0 : OUT STD_LOGIC;
    candin_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    candin_V_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    candin_V_ce1 : OUT STD_LOGIC;
    candin_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    candout_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    candout_V_ap_vld : OUT STD_LOGIC;
    eventstart : IN STD_LOGIC;
    lastvalid : IN STD_LOGIC;
    first : OUT STD_LOGIC;
    first_ap_vld : OUT STD_LOGIC;
    last : OUT STD_LOGIC;
    last_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of stream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "stream,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2104-2L-e,HLS_INPUT_CLOCK=2.778000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.154000,HLS_SYN_LAT=5,HLS_SYN_TPT=3,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=368,HLS_SYN_LUT=1569,HLS_VERSION=2019_2_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv67_2 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv67_4 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal write_r : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ptrsep_V : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal wrptr_V : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal brams_V_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_0_ce0 : STD_LOGIC;
    signal brams_V_0_we0 : STD_LOGIC;
    signal brams_V_0_d0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_0_q0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_1_ce0 : STD_LOGIC;
    signal brams_V_1_we0 : STD_LOGIC;
    signal brams_V_1_d0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_1_q0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_2_ce0 : STD_LOGIC;
    signal brams_V_2_we0 : STD_LOGIC;
    signal brams_V_2_d0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_2_q0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_3_ce0 : STD_LOGIC;
    signal brams_V_3_we0 : STD_LOGIC;
    signal brams_V_3_d0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_3_q0 : STD_LOGIC_VECTOR (66 downto 0);
    signal rdptr_V : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal readidx : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal t_V_3_reg_278 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_370 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal or_ln24_reg_721 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_374 : STD_LOGIC_VECTOR (63 downto 0);
    signal eventstart_read_reg_714 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal or_ln24_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_reg_735 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_1_reg_741 : STD_LOGIC_VECTOR (0 downto 0);
    signal lastvalid_read_reg_757 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_2_reg_768 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_3_reg_774 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln11_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln11_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln544_fu_506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_reg_790 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_1_fu_524_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln895_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_reg_801 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln544_1_fu_618_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_1_reg_805 : STD_LOGIC_VECTOR (63 downto 0);
    signal readidx_load_reg_811 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln56_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_827 : STD_LOGIC_VECTOR (0 downto 0);
    signal brams_V_0_load_reg_831 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_1_load_reg_836 : STD_LOGIC_VECTOR (66 downto 0);
    signal add_ln701_fu_646_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_phi_mux_write_flag_2_phi_fu_260_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_write_flag_2_reg_257 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_write_flag_2_reg_257 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_write_new_2_reg_267 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_write_new_2_reg_267 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_3_reg_278 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_t_V_3_reg_278 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_288 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_302 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_314 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_ptrsep_V_flag_2_reg_324 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_ptrsep_V_new_2_reg_335 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_0258_phi_fu_351_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0258_reg_347 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0258_reg_347 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln544_1_fu_663_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_sig_allocacmp_write_load : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_t_V_1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln700_fu_512_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln700_2_fu_634_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln60_fu_697_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal or_ln24_fu_382_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln29_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln_fu_397_p4 : STD_LOGIC_VECTOR (66 downto 0);
    signal or_ln700_fu_407_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal select_ln30_fu_413_p3 : STD_LOGIC_VECTOR (66 downto 0);
    signal xor_ln29_1_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_1_fu_432_p4 : STD_LOGIC_VECTOR (66 downto 0);
    signal or_ln700_3_fu_442_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal select_ln11_fu_420_p3 : STD_LOGIC_VECTOR (66 downto 0);
    signal trunc_ln544_fu_455_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln700_4_fu_459_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal or_ln11_fu_473_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln11_fu_478_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln11_3_fu_484_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_2_fu_448_p3 : STD_LOGIC_VECTOR (66 downto 0);
    signal select_ln11_4_fu_493_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_3_fu_465_p3 : STD_LOGIC_VECTOR (66 downto 0);
    signal xor_ln29_2_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln29_3_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_3_fu_550_p4 : STD_LOGIC_VECTOR (66 downto 0);
    signal or_ln700_1_fu_560_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal or_ln29_2_fu_535_p4 : STD_LOGIC_VECTOR (66 downto 0);
    signal or_ln700_2_fu_573_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal select_ln39_fu_566_p3 : STD_LOGIC_VECTOR (66 downto 0);
    signal select_ln39_1_fu_579_p3 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_fu_652_p6 : STD_LOGIC_VECTOR (66 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_44 : BOOLEAN;
    signal ap_condition_320 : BOOLEAN;

    component stream_mux_42_67_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (66 downto 0);
        din1 : IN STD_LOGIC_VECTOR (66 downto 0);
        din2 : IN STD_LOGIC_VECTOR (66 downto 0);
        din3 : IN STD_LOGIC_VECTOR (66 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (66 downto 0) );
    end component;


    component stream_brams_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (66 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (66 downto 0) );
    end component;



begin
    brams_V_0_U : component stream_brams_V_0
    generic map (
        DataWidth => 67,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => brams_V_0_address0,
        ce0 => brams_V_0_ce0,
        we0 => brams_V_0_we0,
        d0 => brams_V_0_d0,
        q0 => brams_V_0_q0);

    brams_V_1_U : component stream_brams_V_0
    generic map (
        DataWidth => 67,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => brams_V_1_address0,
        ce0 => brams_V_1_ce0,
        we0 => brams_V_1_we0,
        d0 => brams_V_1_d0,
        q0 => brams_V_1_q0);

    brams_V_2_U : component stream_brams_V_0
    generic map (
        DataWidth => 67,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => brams_V_2_address0,
        ce0 => brams_V_2_ce0,
        we0 => brams_V_2_we0,
        d0 => brams_V_2_d0,
        q0 => brams_V_2_q0);

    brams_V_3_U : component stream_brams_V_0
    generic map (
        DataWidth => 67,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => brams_V_3_address0,
        ce0 => brams_V_3_ce0,
        we0 => brams_V_3_we0,
        d0 => brams_V_3_d0,
        q0 => brams_V_3_q0);

    stream_mux_42_67_bkb_U1 : component stream_mux_42_67_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 67,
        din1_WIDTH => 67,
        din2_WIDTH => 67,
        din3_WIDTH => 67,
        din4_WIDTH => 2,
        dout_WIDTH => 67)
    port map (
        din0 => brams_V_0_load_reg_831,
        din1 => brams_V_1_load_reg_836,
        din2 => brams_V_2_q0,
        din3 => brams_V_3_q0,
        din4 => readidx_load_reg_811,
        dout => tmp_fu_652_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_0258_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln895_reg_801 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_p_0258_reg_347 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_p_0258_reg_347 <= ap_phi_reg_pp0_iter0_p_0258_reg_347;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_44)) then
                if ((or_ln24_reg_721 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288 <= ap_const_lv1_0;
                elsif ((or_ln24_reg_721 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288 <= ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_288;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_827 = ap_const_lv1_0) and (icmp_ln895_reg_801 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302 <= ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288;
            elsif (((icmp_ln895_reg_801 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln56_reg_827 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302 <= ap_const_lv1_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302 <= ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_302;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln895_reg_801 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324 <= ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324 <= ap_phi_reg_pp0_iter0_ptrsep_V_flag_2_reg_324;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln56_reg_827 = ap_const_lv1_0) and (icmp_ln895_reg_801 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314 <= t_V_3_reg_278;
            elsif (((icmp_ln895_reg_801 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln56_reg_827 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314 <= add_ln701_fu_646_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314 <= ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_314;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln895_reg_801 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335 <= ap_phi_reg_pp0_iter0_ptrsep_V_new_2_reg_335;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_t_V_3_reg_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_44)) then
                if ((or_ln24_reg_721 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter1_t_V_3_reg_278 <= ap_sig_allocacmp_t_V_1;
                elsif ((or_ln24_reg_721 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_t_V_3_reg_278 <= add_ln700_1_fu_524_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_t_V_3_reg_278 <= ap_phi_reg_pp0_iter0_t_V_3_reg_278;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_write_flag_2_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_44)) then
                if ((or_ln24_reg_721 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter1_write_flag_2_reg_257 <= eventstart_read_reg_714;
                elsif ((or_ln24_reg_721 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_write_flag_2_reg_257 <= or_ln11_fu_473_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_write_flag_2_reg_257 <= ap_phi_reg_pp0_iter0_write_flag_2_reg_257;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_write_new_2_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_44)) then
                if ((or_ln24_reg_721 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter1_write_new_2_reg_267 <= ap_const_lv1_1;
                elsif ((or_ln24_reg_721 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_write_new_2_reg_267 <= xor_ln11_fu_478_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_write_new_2_reg_267 <= ap_phi_reg_pp0_iter0_write_new_2_reg_267;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln895_reg_801 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                brams_V_0_load_reg_831 <= brams_V_0_q0;
                brams_V_1_load_reg_836 <= brams_V_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                eventstart_read_reg_714 <= (0=>eventstart, others=>'-');
                icmp_ln895_reg_801 <= icmp_ln895_fu_602_p2;
                or_ln24_reg_721 <= or_ln24_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln895_fu_602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln56_reg_827 <= icmp_ln56_fu_628_p2;
                readidx_load_reg_811 <= readidx;
                    zext_ln544_1_reg_805(8 downto 0) <= zext_ln544_1_fu_618_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln24_reg_721 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln883_1_reg_741 <= grp_fu_364_p2;
                icmp_ln883_reg_735 <= grp_fu_358_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln24_reg_721 = ap_const_lv1_1))) then
                icmp_ln883_2_reg_768 <= grp_fu_358_p2;
                icmp_ln883_3_reg_774 <= grp_fu_364_p2;
                wrptr_V <= add_ln700_fu_512_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                lastvalid_read_reg_757 <= (0=>lastvalid, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4 = ap_const_lv1_1))) then
                ptrsep_V <= ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln895_fu_602_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln56_fu_628_p2 = ap_const_lv1_1))) then
                rdptr_V <= add_ln700_2_fu_634_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln895_reg_801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                readidx <= add_ln60_fu_697_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln24_reg_721 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln24_reg_721 = ap_const_lv1_1)))) then
                reg_370 <= candin_V_q0;
                reg_374 <= candin_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                t_V_3_reg_278 <= ap_phi_reg_pp0_iter1_t_V_3_reg_278;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_write_flag_2_phi_fu_260_p4 = ap_const_lv1_1))) then
                write_r <= ap_phi_reg_pp0_iter1_write_new_2_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_ln24_reg_721 = ap_const_lv1_1))) then
                    zext_ln544_reg_790(8 downto 0) <= zext_ln544_fu_506_p1(8 downto 0);
            end if;
        end if;
    end process;
    zext_ln544_reg_790(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    zext_ln544_1_reg_805(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln60_fu_697_p2 <= std_logic_vector(unsigned(readidx_load_reg_811) + unsigned(ap_const_lv2_1));
    add_ln700_1_fu_524_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(ap_sig_allocacmp_t_V_1));
    add_ln700_2_fu_634_p2 <= std_logic_vector(unsigned(rdptr_V) + unsigned(ap_const_lv9_1));
    add_ln700_fu_512_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(wrptr_V));
    add_ln701_fu_646_p2 <= std_logic_vector(unsigned(t_V_3_reg_278) + unsigned(ap_const_lv9_1FF));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_320_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_01001)
    begin
                ap_condition_320 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_44_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
                ap_condition_44 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0258_phi_fu_351_p4_assign_proc : process(icmp_ln895_reg_801, ap_phi_reg_pp0_iter1_p_0258_reg_347, trunc_ln544_1_fu_663_p1)
    begin
        if ((icmp_ln895_reg_801 = ap_const_lv1_0)) then 
            ap_phi_mux_p_0258_phi_fu_351_p4 <= trunc_ln544_1_fu_663_p1;
        else 
            ap_phi_mux_p_0258_phi_fu_351_p4 <= ap_phi_reg_pp0_iter1_p_0258_reg_347;
        end if; 
    end process;


    ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4_assign_proc : process(icmp_ln895_reg_801, ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302, ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324)
    begin
        if ((icmp_ln895_reg_801 = ap_const_lv1_0)) then 
            ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4 <= ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302;
        else 
            ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4 <= ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324;
        end if; 
    end process;


    ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4_assign_proc : process(icmp_ln895_reg_801, ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314, ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335)
    begin
        if ((icmp_ln895_reg_801 = ap_const_lv1_0)) then 
            ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4 <= ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314;
        else 
            ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4 <= ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335;
        end if; 
    end process;

    ap_phi_mux_write_flag_2_phi_fu_260_p4 <= ap_phi_reg_pp0_iter1_write_flag_2_reg_257;
    ap_phi_reg_pp0_iter0_p_0258_reg_347 <= "X";
    ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_288 <= "X";
    ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_302 <= "X";
    ap_phi_reg_pp0_iter0_ptrsep_V_flag_2_reg_324 <= "X";
    ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_314 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_ptrsep_V_new_2_reg_335 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_t_V_3_reg_278 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_write_flag_2_reg_257 <= "X";
    ap_phi_reg_pp0_iter0_write_new_2_reg_267 <= "X";

    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_phi_mux_p_0258_phi_fu_351_p4;

    ap_sig_allocacmp_t_V_1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ptrsep_V, ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4, ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4 = ap_const_lv1_1))) then 
            ap_sig_allocacmp_t_V_1 <= ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4;
        else 
            ap_sig_allocacmp_t_V_1 <= ptrsep_V;
        end if; 
    end process;


    ap_sig_allocacmp_write_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, write_r, ap_phi_mux_write_flag_2_phi_fu_260_p4, ap_phi_reg_pp0_iter1_write_new_2_reg_267, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_write_flag_2_phi_fu_260_p4 = ap_const_lv1_1))) then 
            ap_sig_allocacmp_write_load <= ap_phi_reg_pp0_iter1_write_new_2_reg_267;
        else 
            ap_sig_allocacmp_write_load <= write_r;
        end if; 
    end process;


    brams_V_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, zext_ln544_fu_506_p1, zext_ln544_1_fu_618_p1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            brams_V_0_address0 <= zext_ln544_1_fu_618_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            brams_V_0_address0 <= zext_ln544_fu_506_p1(9 - 1 downto 0);
        else 
            brams_V_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    brams_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            brams_V_0_ce0 <= ap_const_logic_1;
        else 
            brams_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_0_d0 <= 
        select_ln39_3_fu_465_p3 when (select_ln11_4_fu_493_p0(0) = '1') else 
        select_ln11_fu_420_p3;

    brams_V_0_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, or_ln24_reg_721)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln24_reg_721 = ap_const_lv1_1))) then 
            brams_V_0_we0 <= ap_const_logic_1;
        else 
            brams_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    brams_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, zext_ln544_fu_506_p1, zext_ln544_1_fu_618_p1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            brams_V_1_address0 <= zext_ln544_1_fu_618_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            brams_V_1_address0 <= zext_ln544_fu_506_p1(9 - 1 downto 0);
        else 
            brams_V_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    brams_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            brams_V_1_ce0 <= ap_const_logic_1;
        else 
            brams_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_1_d0 <= 
        select_ln39_2_fu_448_p3 when (select_ln11_3_fu_484_p0(0) = '1') else 
        or_ln29_1_fu_432_p4;

    brams_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, or_ln24_reg_721)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln24_reg_721 = ap_const_lv1_1))) then 
            brams_V_1_we0 <= ap_const_logic_1;
        else 
            brams_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    brams_V_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, zext_ln544_reg_790, zext_ln544_1_reg_805, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                brams_V_2_address0 <= zext_ln544_1_reg_805(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                brams_V_2_address0 <= zext_ln544_reg_790(9 - 1 downto 0);
            else 
                brams_V_2_address0 <= "XXXXXXXXX";
            end if;
        else 
            brams_V_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    brams_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            brams_V_2_ce0 <= ap_const_logic_1;
        else 
            brams_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_2_d0 <= 
        select_ln39_1_fu_579_p3 when (lastvalid_read_reg_757(0) = '1') else 
        or_ln29_2_fu_535_p4;

    brams_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_ln24_reg_721, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln24_reg_721 = ap_const_lv1_1))) then 
            brams_V_2_we0 <= ap_const_logic_1;
        else 
            brams_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    brams_V_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, zext_ln544_reg_790, zext_ln544_1_reg_805, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                brams_V_3_address0 <= zext_ln544_1_reg_805(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                brams_V_3_address0 <= zext_ln544_reg_790(9 - 1 downto 0);
            else 
                brams_V_3_address0 <= "XXXXXXXXX";
            end if;
        else 
            brams_V_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    brams_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            brams_V_3_ce0 <= ap_const_logic_1;
        else 
            brams_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_3_d0 <= 
        select_ln39_fu_566_p3 when (lastvalid_read_reg_757(0) = '1') else 
        or_ln29_3_fu_550_p4;

    brams_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_ln24_reg_721, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln24_reg_721 = ap_const_lv1_1))) then 
            brams_V_3_we0 <= ap_const_logic_1;
        else 
            brams_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    candin_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                candin_V_address0 <= ap_const_lv64_2(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                candin_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
            else 
                candin_V_address0 <= "XX";
            end if;
        else 
            candin_V_address0 <= "XX";
        end if; 
    end process;


    candin_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                candin_V_address1 <= ap_const_lv64_3(2 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                candin_V_address1 <= ap_const_lv64_1(2 - 1 downto 0);
            else 
                candin_V_address1 <= "XX";
            end if;
        else 
            candin_V_address1 <= "XX";
        end if; 
    end process;


    candin_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            candin_V_ce0 <= ap_const_logic_1;
        else 
            candin_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    candin_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            candin_V_ce1 <= ap_const_logic_1;
        else 
            candin_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    candout_V_assign_proc : process(icmp_ln895_reg_801, tmp_fu_652_p6, ap_condition_320)
    begin
        if ((ap_const_boolean_1 = ap_condition_320)) then
            if ((icmp_ln895_reg_801 = ap_const_lv1_1)) then 
                candout_V <= ap_const_lv64_0;
            elsif ((icmp_ln895_reg_801 = ap_const_lv1_0)) then 
                candout_V <= tmp_fu_652_p6(66 downto 3);
            else 
                candout_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            candout_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    candout_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, icmp_ln895_reg_801)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln895_reg_801 = ap_const_lv1_1)) or ((icmp_ln895_reg_801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            candout_V_ap_vld <= ap_const_logic_1;
        else 
            candout_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    first_assign_proc : process(icmp_ln895_reg_801, tmp_fu_652_p6, ap_condition_320)
    begin
        if ((ap_const_boolean_1 = ap_condition_320)) then
            if ((icmp_ln895_reg_801 = ap_const_lv1_1)) then 
                first <= ap_const_logic_0;
            elsif ((icmp_ln895_reg_801 = ap_const_lv1_0)) then 
                first <= tmp_fu_652_p6(1);
            else 
                first <= 'X';
            end if;
        else 
            first <= 'X';
        end if; 
    end process;


    first_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, icmp_ln895_reg_801)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln895_reg_801 = ap_const_lv1_1)) or ((icmp_ln895_reg_801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            first_ap_vld <= ap_const_logic_1;
        else 
            first_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_358_p2 <= "1" when (candin_V_q0 = ap_const_lv64_0) else "0";
    grp_fu_364_p2 <= "1" when (candin_V_q1 = ap_const_lv64_0) else "0";
    icmp_ln56_fu_628_p2 <= "1" when (readidx = ap_const_lv2_3) else "0";
    icmp_ln895_fu_602_p2 <= "1" when (ap_phi_reg_pp0_iter1_t_V_3_reg_278 = ap_const_lv9_0) else "0";

    last_assign_proc : process(icmp_ln895_reg_801, tmp_fu_652_p6, ap_condition_320)
    begin
        if ((ap_const_boolean_1 = ap_condition_320)) then
            if ((icmp_ln895_reg_801 = ap_const_lv1_1)) then 
                last <= ap_const_logic_0;
            elsif ((icmp_ln895_reg_801 = ap_const_lv1_0)) then 
                last <= tmp_fu_652_p6(2);
            else 
                last <= 'X';
            end if;
        else 
            last <= 'X';
        end if; 
    end process;


    last_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, icmp_ln895_reg_801)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln895_reg_801 = ap_const_lv1_1)) or ((icmp_ln895_reg_801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            last_ap_vld <= ap_const_logic_1;
        else 
            last_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln11_fu_473_p0 <= (0=>lastvalid, others=>'-');
    or_ln11_fu_473_p2 <= (or_ln11_fu_473_p0 or eventstart_read_reg_714);
    or_ln24_fu_382_p1 <= (0=>eventstart, others=>'-');
    or_ln24_fu_382_p2 <= (or_ln24_fu_382_p1 or ap_sig_allocacmp_write_load);
    or_ln29_1_fu_432_p4 <= ((reg_374 & ap_const_lv2_0) & xor_ln29_1_fu_427_p2);
    or_ln29_2_fu_535_p4 <= ((reg_370 & ap_const_lv2_0) & xor_ln29_2_fu_530_p2);
    or_ln29_3_fu_550_p4 <= ((reg_374 & ap_const_lv2_0) & xor_ln29_3_fu_545_p2);
    or_ln700_1_fu_560_p2 <= (or_ln29_3_fu_550_p4 or ap_const_lv67_4);
    or_ln700_2_fu_573_p2 <= (or_ln29_2_fu_535_p4 or ap_const_lv67_4);
    or_ln700_3_fu_442_p2 <= (or_ln29_1_fu_432_p4 or ap_const_lv67_4);
    or_ln700_4_fu_459_p2 <= (select_ln11_fu_420_p3 or ap_const_lv67_4);
    or_ln700_fu_407_p2 <= (or_ln_fu_397_p4 or ap_const_lv67_2);
    or_ln_fu_397_p4 <= ((reg_370 & ap_const_lv2_0) & xor_ln29_fu_392_p2);
    select_ln11_3_fu_484_p0 <= (0=>lastvalid, others=>'-');
    select_ln11_4_fu_493_p0 <= (0=>lastvalid, others=>'-');
    select_ln11_fu_420_p3 <= 
        select_ln30_fu_413_p3 when (eventstart_read_reg_714(0) = '1') else 
        or_ln_fu_397_p4;
    select_ln30_fu_413_p3 <= 
        or_ln_fu_397_p4 when (icmp_ln883_reg_735(0) = '1') else 
        or_ln700_fu_407_p2;
    select_ln39_1_fu_579_p3 <= 
        or_ln29_2_fu_535_p4 when (icmp_ln883_2_reg_768(0) = '1') else 
        or_ln700_2_fu_573_p2;
    select_ln39_2_fu_448_p3 <= 
        or_ln29_1_fu_432_p4 when (icmp_ln883_1_reg_741(0) = '1') else 
        or_ln700_3_fu_442_p2;
    select_ln39_3_fu_465_p3 <= 
        or_ln700_4_fu_459_p2 when (trunc_ln544_fu_455_p1(0) = '1') else 
        select_ln11_fu_420_p3;
    select_ln39_fu_566_p3 <= 
        or_ln29_3_fu_550_p4 when (icmp_ln883_3_reg_774(0) = '1') else 
        or_ln700_1_fu_560_p2;
    trunc_ln544_1_fu_663_p1 <= tmp_fu_652_p6(1 - 1 downto 0);
    trunc_ln544_fu_455_p1 <= select_ln11_fu_420_p3(1 - 1 downto 0);
    xor_ln11_fu_478_p0 <= (0=>lastvalid, others=>'-');
    xor_ln11_fu_478_p2 <= (xor_ln11_fu_478_p0 xor ap_const_lv1_1);
    xor_ln29_1_fu_427_p2 <= (icmp_ln883_1_reg_741 xor ap_const_lv1_1);
    xor_ln29_2_fu_530_p2 <= (icmp_ln883_2_reg_768 xor ap_const_lv1_1);
    xor_ln29_3_fu_545_p2 <= (icmp_ln883_3_reg_774 xor ap_const_lv1_1);
    xor_ln29_fu_392_p2 <= (icmp_ln883_reg_735 xor ap_const_lv1_1);
    zext_ln544_1_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rdptr_V),64));
    zext_ln544_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wrptr_V),64));
end behav;
