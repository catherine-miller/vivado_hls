// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "stream.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic stream::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic stream::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> stream::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<3> stream::ap_ST_fsm_pp0_stage1 = "10";
const sc_lv<3> stream::ap_ST_fsm_pp0_stage2 = "100";
const sc_lv<32> stream::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool stream::ap_const_boolean_1 = true;
const sc_lv<32> stream::ap_const_lv32_2 = "10";
const bool stream::ap_const_boolean_0 = false;
const sc_lv<1> stream::ap_const_lv1_0 = "0";
const sc_lv<9> stream::ap_const_lv9_0 = "000000000";
const sc_lv<2> stream::ap_const_lv2_0 = "00";
const sc_lv<32> stream::ap_const_lv32_1 = "1";
const sc_lv<1> stream::ap_const_lv1_1 = "1";
const sc_lv<64> stream::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> stream::ap_const_lv64_1 = "1";
const sc_lv<64> stream::ap_const_lv64_2 = "10";
const sc_lv<64> stream::ap_const_lv64_3 = "11";
const sc_lv<67> stream::ap_const_lv67_2 = "10";
const sc_lv<67> stream::ap_const_lv67_4 = "100";
const sc_lv<9> stream::ap_const_lv9_1 = "1";
const sc_lv<2> stream::ap_const_lv2_3 = "11";
const sc_lv<9> stream::ap_const_lv9_1FF = "111111111";
const sc_lv<32> stream::ap_const_lv32_3 = "11";
const sc_lv<32> stream::ap_const_lv32_42 = "1000010";
const sc_lv<2> stream::ap_const_lv2_1 = "1";

stream::stream(sc_module_name name) : sc_module(name), mVcdFile(0) {
    brams_V_0_U = new stream_brams_V_0("brams_V_0_U");
    brams_V_0_U->clk(ap_clk);
    brams_V_0_U->reset(ap_rst);
    brams_V_0_U->address0(brams_V_0_address0);
    brams_V_0_U->ce0(brams_V_0_ce0);
    brams_V_0_U->we0(brams_V_0_we0);
    brams_V_0_U->d0(brams_V_0_d0);
    brams_V_0_U->q0(brams_V_0_q0);
    brams_V_1_U = new stream_brams_V_0("brams_V_1_U");
    brams_V_1_U->clk(ap_clk);
    brams_V_1_U->reset(ap_rst);
    brams_V_1_U->address0(brams_V_1_address0);
    brams_V_1_U->ce0(brams_V_1_ce0);
    brams_V_1_U->we0(brams_V_1_we0);
    brams_V_1_U->d0(brams_V_1_d0);
    brams_V_1_U->q0(brams_V_1_q0);
    brams_V_2_U = new stream_brams_V_0("brams_V_2_U");
    brams_V_2_U->clk(ap_clk);
    brams_V_2_U->reset(ap_rst);
    brams_V_2_U->address0(brams_V_2_address0);
    brams_V_2_U->ce0(brams_V_2_ce0);
    brams_V_2_U->we0(brams_V_2_we0);
    brams_V_2_U->d0(brams_V_2_d0);
    brams_V_2_U->q0(brams_V_2_q0);
    brams_V_3_U = new stream_brams_V_0("brams_V_3_U");
    brams_V_3_U->clk(ap_clk);
    brams_V_3_U->reset(ap_rst);
    brams_V_3_U->address0(brams_V_3_address0);
    brams_V_3_U->ce0(brams_V_3_ce0);
    brams_V_3_U->we0(brams_V_3_we0);
    brams_V_3_U->d0(brams_V_3_d0);
    brams_V_3_U->q0(brams_V_3_q0);
    stream_mux_42_67_bkb_U1 = new stream_mux_42_67_bkb<1,1,67,67,67,67,2,67>("stream_mux_42_67_bkb_U1");
    stream_mux_42_67_bkb_U1->din0(brams_V_0_load_reg_831);
    stream_mux_42_67_bkb_U1->din1(brams_V_1_load_reg_836);
    stream_mux_42_67_bkb_U1->din2(brams_V_2_q0);
    stream_mux_42_67_bkb_U1->din3(brams_V_3_q0);
    stream_mux_42_67_bkb_U1->din4(readidx_load_reg_811);
    stream_mux_42_67_bkb_U1->dout(tmp_fu_652_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln60_fu_697_p2);
    sensitive << ( readidx_load_reg_811 );

    SC_METHOD(thread_add_ln700_1_fu_524_p2);
    sensitive << ( ap_sig_allocacmp_t_V_1 );

    SC_METHOD(thread_add_ln700_2_fu_634_p2);
    sensitive << ( rdptr_V );

    SC_METHOD(thread_add_ln700_fu_512_p2);
    sensitive << ( wrptr_V );

    SC_METHOD(thread_add_ln701_fu_646_p2);
    sensitive << ( t_V_3_reg_278 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_01001);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage2_iter1);

    SC_METHOD(thread_ap_condition_320);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_ap_condition_44);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0_reg );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_idle_pp0_1to1);
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_p_0258_phi_fu_351_p4);
    sensitive << ( icmp_ln895_reg_801 );
    sensitive << ( ap_phi_reg_pp0_iter1_p_0258_reg_347 );
    sensitive << ( trunc_ln544_1_fu_663_p1 );

    SC_METHOD(thread_ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4);
    sensitive << ( icmp_ln895_reg_801 );
    sensitive << ( ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302 );
    sensitive << ( ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324 );

    SC_METHOD(thread_ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4);
    sensitive << ( icmp_ln895_reg_801 );
    sensitive << ( ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314 );
    sensitive << ( ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335 );

    SC_METHOD(thread_ap_phi_mux_write_flag_2_phi_fu_260_p4);
    sensitive << ( ap_phi_reg_pp0_iter1_write_flag_2_reg_257 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_p_0258_reg_347);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_288);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_302);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_2_reg_324);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_314);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ptrsep_V_new_2_reg_335);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_t_V_3_reg_278);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_write_flag_2_reg_257);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_write_new_2_reg_267);

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_phi_mux_p_0258_phi_fu_351_p4 );

    SC_METHOD(thread_ap_sig_allocacmp_t_V_1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ptrsep_V );
    sensitive << ( ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4 );
    sensitive << ( ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_ap_sig_allocacmp_write_load);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( write_r );
    sensitive << ( ap_phi_mux_write_flag_2_phi_fu_260_p4 );
    sensitive << ( ap_phi_reg_pp0_iter1_write_new_2_reg_267 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_brams_V_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( zext_ln544_fu_506_p1 );
    sensitive << ( zext_ln544_1_fu_618_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_brams_V_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_0_d0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( select_ln11_fu_420_p3 );
    sensitive << ( select_ln11_4_fu_493_p0 );
    sensitive << ( select_ln39_3_fu_465_p3 );

    SC_METHOD(thread_brams_V_0_we0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( or_ln24_reg_721 );

    SC_METHOD(thread_brams_V_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( zext_ln544_fu_506_p1 );
    sensitive << ( zext_ln544_1_fu_618_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_brams_V_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_1_d0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( or_ln29_1_fu_432_p4 );
    sensitive << ( select_ln11_3_fu_484_p0 );
    sensitive << ( select_ln39_2_fu_448_p3 );

    SC_METHOD(thread_brams_V_1_we0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( or_ln24_reg_721 );

    SC_METHOD(thread_brams_V_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( zext_ln544_reg_790 );
    sensitive << ( zext_ln544_1_reg_805 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_brams_V_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_2_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( lastvalid_read_reg_757 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_ln29_2_fu_535_p4 );
    sensitive << ( select_ln39_1_fu_579_p3 );

    SC_METHOD(thread_brams_V_2_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_ln24_reg_721 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( zext_ln544_reg_790 );
    sensitive << ( zext_ln544_1_reg_805 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_brams_V_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_3_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( lastvalid_read_reg_757 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_ln29_3_fu_550_p4 );
    sensitive << ( select_ln39_fu_566_p3 );

    SC_METHOD(thread_brams_V_3_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_ln24_reg_721 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_candin_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_candin_V_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_candin_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_candin_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_candout_V);
    sensitive << ( icmp_ln895_reg_801 );
    sensitive << ( tmp_fu_652_p6 );
    sensitive << ( ap_condition_320 );

    SC_METHOD(thread_candout_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( icmp_ln895_reg_801 );

    SC_METHOD(thread_first);
    sensitive << ( icmp_ln895_reg_801 );
    sensitive << ( tmp_fu_652_p6 );
    sensitive << ( ap_condition_320 );

    SC_METHOD(thread_first_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( icmp_ln895_reg_801 );

    SC_METHOD(thread_grp_fu_358_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( candin_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( or_ln24_reg_721 );

    SC_METHOD(thread_grp_fu_364_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( candin_V_q1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( or_ln24_reg_721 );

    SC_METHOD(thread_icmp_ln56_fu_628_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( readidx );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln895_fu_602_p2 );

    SC_METHOD(thread_icmp_ln895_fu_602_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_reg_pp0_iter1_t_V_3_reg_278 );

    SC_METHOD(thread_last);
    sensitive << ( icmp_ln895_reg_801 );
    sensitive << ( tmp_fu_652_p6 );
    sensitive << ( ap_condition_320 );

    SC_METHOD(thread_last_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( icmp_ln895_reg_801 );

    SC_METHOD(thread_or_ln11_fu_473_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( lastvalid );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_or_ln11_fu_473_p2);
    sensitive << ( eventstart_read_reg_714 );
    sensitive << ( or_ln11_fu_473_p0 );

    SC_METHOD(thread_or_ln24_fu_382_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( eventstart );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_or_ln24_fu_382_p2);
    sensitive << ( ap_sig_allocacmp_write_load );
    sensitive << ( or_ln24_fu_382_p1 );

    SC_METHOD(thread_or_ln29_1_fu_432_p4);
    sensitive << ( reg_374 );
    sensitive << ( xor_ln29_1_fu_427_p2 );

    SC_METHOD(thread_or_ln29_2_fu_535_p4);
    sensitive << ( reg_370 );
    sensitive << ( xor_ln29_2_fu_530_p2 );

    SC_METHOD(thread_or_ln29_3_fu_550_p4);
    sensitive << ( reg_374 );
    sensitive << ( xor_ln29_3_fu_545_p2 );

    SC_METHOD(thread_or_ln700_1_fu_560_p2);
    sensitive << ( or_ln29_3_fu_550_p4 );

    SC_METHOD(thread_or_ln700_2_fu_573_p2);
    sensitive << ( or_ln29_2_fu_535_p4 );

    SC_METHOD(thread_or_ln700_3_fu_442_p2);
    sensitive << ( or_ln29_1_fu_432_p4 );

    SC_METHOD(thread_or_ln700_4_fu_459_p2);
    sensitive << ( select_ln11_fu_420_p3 );

    SC_METHOD(thread_or_ln700_fu_407_p2);
    sensitive << ( or_ln_fu_397_p4 );

    SC_METHOD(thread_or_ln_fu_397_p4);
    sensitive << ( reg_370 );
    sensitive << ( xor_ln29_fu_392_p2 );

    SC_METHOD(thread_select_ln11_3_fu_484_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( lastvalid );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_select_ln11_4_fu_493_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( lastvalid );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_select_ln11_fu_420_p3);
    sensitive << ( eventstart_read_reg_714 );
    sensitive << ( or_ln_fu_397_p4 );
    sensitive << ( select_ln30_fu_413_p3 );

    SC_METHOD(thread_select_ln30_fu_413_p3);
    sensitive << ( icmp_ln883_reg_735 );
    sensitive << ( or_ln_fu_397_p4 );
    sensitive << ( or_ln700_fu_407_p2 );

    SC_METHOD(thread_select_ln39_1_fu_579_p3);
    sensitive << ( icmp_ln883_2_reg_768 );
    sensitive << ( or_ln29_2_fu_535_p4 );
    sensitive << ( or_ln700_2_fu_573_p2 );

    SC_METHOD(thread_select_ln39_2_fu_448_p3);
    sensitive << ( icmp_ln883_1_reg_741 );
    sensitive << ( or_ln29_1_fu_432_p4 );
    sensitive << ( or_ln700_3_fu_442_p2 );

    SC_METHOD(thread_select_ln39_3_fu_465_p3);
    sensitive << ( select_ln11_fu_420_p3 );
    sensitive << ( trunc_ln544_fu_455_p1 );
    sensitive << ( or_ln700_4_fu_459_p2 );

    SC_METHOD(thread_select_ln39_fu_566_p3);
    sensitive << ( icmp_ln883_3_reg_774 );
    sensitive << ( or_ln29_3_fu_550_p4 );
    sensitive << ( or_ln700_1_fu_560_p2 );

    SC_METHOD(thread_trunc_ln544_1_fu_663_p1);
    sensitive << ( tmp_fu_652_p6 );

    SC_METHOD(thread_trunc_ln544_fu_455_p1);
    sensitive << ( select_ln11_fu_420_p3 );

    SC_METHOD(thread_xor_ln11_fu_478_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( lastvalid );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_xor_ln11_fu_478_p2);
    sensitive << ( xor_ln11_fu_478_p0 );

    SC_METHOD(thread_xor_ln29_1_fu_427_p2);
    sensitive << ( icmp_ln883_1_reg_741 );

    SC_METHOD(thread_xor_ln29_2_fu_530_p2);
    sensitive << ( icmp_ln883_2_reg_768 );

    SC_METHOD(thread_xor_ln29_3_fu_545_p2);
    sensitive << ( icmp_ln883_3_reg_774 );

    SC_METHOD(thread_xor_ln29_fu_392_p2);
    sensitive << ( icmp_ln883_reg_735 );

    SC_METHOD(thread_zext_ln544_1_fu_618_p1);
    sensitive << ( rdptr_V );

    SC_METHOD(thread_zext_ln544_fu_506_p1);
    sensitive << ( wrptr_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_idle_pp0_1to1 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    write_r = "0";
    ptrsep_V = "000000000";
    wrptr_V = "000000000";
    rdptr_V = "000000000";
    readidx = "00";
    ap_enable_reg_pp0_iter0_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "stream_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, candin_V_address0, "(port)candin_V_address0");
    sc_trace(mVcdFile, candin_V_ce0, "(port)candin_V_ce0");
    sc_trace(mVcdFile, candin_V_q0, "(port)candin_V_q0");
    sc_trace(mVcdFile, candin_V_address1, "(port)candin_V_address1");
    sc_trace(mVcdFile, candin_V_ce1, "(port)candin_V_ce1");
    sc_trace(mVcdFile, candin_V_q1, "(port)candin_V_q1");
    sc_trace(mVcdFile, candout_V, "(port)candout_V");
    sc_trace(mVcdFile, candout_V_ap_vld, "(port)candout_V_ap_vld");
    sc_trace(mVcdFile, eventstart, "(port)eventstart");
    sc_trace(mVcdFile, lastvalid, "(port)lastvalid");
    sc_trace(mVcdFile, first, "(port)first");
    sc_trace(mVcdFile, first_ap_vld, "(port)first_ap_vld");
    sc_trace(mVcdFile, last, "(port)last");
    sc_trace(mVcdFile, last_ap_vld, "(port)last_ap_vld");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage2_iter0, "ap_block_state3_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage2_iter1, "ap_block_state6_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, write_r, "write_r");
    sc_trace(mVcdFile, ptrsep_V, "ptrsep_V");
    sc_trace(mVcdFile, wrptr_V, "wrptr_V");
    sc_trace(mVcdFile, brams_V_0_address0, "brams_V_0_address0");
    sc_trace(mVcdFile, brams_V_0_ce0, "brams_V_0_ce0");
    sc_trace(mVcdFile, brams_V_0_we0, "brams_V_0_we0");
    sc_trace(mVcdFile, brams_V_0_d0, "brams_V_0_d0");
    sc_trace(mVcdFile, brams_V_0_q0, "brams_V_0_q0");
    sc_trace(mVcdFile, brams_V_1_address0, "brams_V_1_address0");
    sc_trace(mVcdFile, brams_V_1_ce0, "brams_V_1_ce0");
    sc_trace(mVcdFile, brams_V_1_we0, "brams_V_1_we0");
    sc_trace(mVcdFile, brams_V_1_d0, "brams_V_1_d0");
    sc_trace(mVcdFile, brams_V_1_q0, "brams_V_1_q0");
    sc_trace(mVcdFile, brams_V_2_address0, "brams_V_2_address0");
    sc_trace(mVcdFile, brams_V_2_ce0, "brams_V_2_ce0");
    sc_trace(mVcdFile, brams_V_2_we0, "brams_V_2_we0");
    sc_trace(mVcdFile, brams_V_2_d0, "brams_V_2_d0");
    sc_trace(mVcdFile, brams_V_2_q0, "brams_V_2_q0");
    sc_trace(mVcdFile, brams_V_3_address0, "brams_V_3_address0");
    sc_trace(mVcdFile, brams_V_3_ce0, "brams_V_3_ce0");
    sc_trace(mVcdFile, brams_V_3_we0, "brams_V_3_we0");
    sc_trace(mVcdFile, brams_V_3_d0, "brams_V_3_d0");
    sc_trace(mVcdFile, brams_V_3_q0, "brams_V_3_q0");
    sc_trace(mVcdFile, rdptr_V, "rdptr_V");
    sc_trace(mVcdFile, readidx, "readidx");
    sc_trace(mVcdFile, t_V_3_reg_278, "t_V_3_reg_278");
    sc_trace(mVcdFile, reg_370, "reg_370");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage1_iter0, "ap_block_state2_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter1, "ap_block_state5_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, or_ln24_reg_721, "or_ln24_reg_721");
    sc_trace(mVcdFile, reg_374, "reg_374");
    sc_trace(mVcdFile, eventstart_read_reg_714, "eventstart_read_reg_714");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, or_ln24_fu_382_p2, "or_ln24_fu_382_p2");
    sc_trace(mVcdFile, grp_fu_358_p2, "grp_fu_358_p2");
    sc_trace(mVcdFile, icmp_ln883_reg_735, "icmp_ln883_reg_735");
    sc_trace(mVcdFile, grp_fu_364_p2, "grp_fu_364_p2");
    sc_trace(mVcdFile, icmp_ln883_1_reg_741, "icmp_ln883_1_reg_741");
    sc_trace(mVcdFile, lastvalid_read_reg_757, "lastvalid_read_reg_757");
    sc_trace(mVcdFile, icmp_ln883_2_reg_768, "icmp_ln883_2_reg_768");
    sc_trace(mVcdFile, icmp_ln883_3_reg_774, "icmp_ln883_3_reg_774");
    sc_trace(mVcdFile, or_ln11_fu_473_p2, "or_ln11_fu_473_p2");
    sc_trace(mVcdFile, xor_ln11_fu_478_p2, "xor_ln11_fu_478_p2");
    sc_trace(mVcdFile, zext_ln544_fu_506_p1, "zext_ln544_fu_506_p1");
    sc_trace(mVcdFile, zext_ln544_reg_790, "zext_ln544_reg_790");
    sc_trace(mVcdFile, add_ln700_1_fu_524_p2, "add_ln700_1_fu_524_p2");
    sc_trace(mVcdFile, icmp_ln895_fu_602_p2, "icmp_ln895_fu_602_p2");
    sc_trace(mVcdFile, icmp_ln895_reg_801, "icmp_ln895_reg_801");
    sc_trace(mVcdFile, zext_ln544_1_fu_618_p1, "zext_ln544_1_fu_618_p1");
    sc_trace(mVcdFile, zext_ln544_1_reg_805, "zext_ln544_1_reg_805");
    sc_trace(mVcdFile, readidx_load_reg_811, "readidx_load_reg_811");
    sc_trace(mVcdFile, icmp_ln56_fu_628_p2, "icmp_ln56_fu_628_p2");
    sc_trace(mVcdFile, icmp_ln56_reg_827, "icmp_ln56_reg_827");
    sc_trace(mVcdFile, brams_V_0_load_reg_831, "brams_V_0_load_reg_831");
    sc_trace(mVcdFile, brams_V_1_load_reg_836, "brams_V_1_load_reg_836");
    sc_trace(mVcdFile, add_ln701_fu_646_p2, "add_ln701_fu_646_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0_reg, "ap_enable_reg_pp0_iter0_reg");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_phi_mux_write_flag_2_phi_fu_260_p4, "ap_phi_mux_write_flag_2_phi_fu_260_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_write_flag_2_reg_257, "ap_phi_reg_pp0_iter0_write_flag_2_reg_257");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_write_flag_2_reg_257, "ap_phi_reg_pp0_iter1_write_flag_2_reg_257");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_write_new_2_reg_267, "ap_phi_reg_pp0_iter0_write_new_2_reg_267");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_write_new_2_reg_267, "ap_phi_reg_pp0_iter1_write_new_2_reg_267");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_t_V_3_reg_278, "ap_phi_reg_pp0_iter0_t_V_3_reg_278");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_t_V_3_reg_278, "ap_phi_reg_pp0_iter1_t_V_3_reg_278");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_288, "ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_288");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288, "ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_302, "ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_302");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302, "ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_314, "ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_314");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314, "ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314");
    sc_trace(mVcdFile, ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4, "ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ptrsep_V_flag_2_reg_324, "ap_phi_reg_pp0_iter0_ptrsep_V_flag_2_reg_324");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324, "ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324");
    sc_trace(mVcdFile, ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4, "ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ptrsep_V_new_2_reg_335, "ap_phi_reg_pp0_iter0_ptrsep_V_new_2_reg_335");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335, "ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335");
    sc_trace(mVcdFile, ap_phi_mux_p_0258_phi_fu_351_p4, "ap_phi_mux_p_0258_phi_fu_351_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_0258_reg_347, "ap_phi_reg_pp0_iter0_p_0258_reg_347");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_p_0258_reg_347, "ap_phi_reg_pp0_iter1_p_0258_reg_347");
    sc_trace(mVcdFile, trunc_ln544_1_fu_663_p1, "trunc_ln544_1_fu_663_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_sig_allocacmp_write_load, "ap_sig_allocacmp_write_load");
    sc_trace(mVcdFile, ap_sig_allocacmp_t_V_1, "ap_sig_allocacmp_t_V_1");
    sc_trace(mVcdFile, add_ln700_fu_512_p2, "add_ln700_fu_512_p2");
    sc_trace(mVcdFile, add_ln700_2_fu_634_p2, "add_ln700_2_fu_634_p2");
    sc_trace(mVcdFile, add_ln60_fu_697_p2, "add_ln60_fu_697_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_01001, "ap_block_pp0_stage2_01001");
    sc_trace(mVcdFile, or_ln24_fu_382_p1, "or_ln24_fu_382_p1");
    sc_trace(mVcdFile, xor_ln29_fu_392_p2, "xor_ln29_fu_392_p2");
    sc_trace(mVcdFile, or_ln_fu_397_p4, "or_ln_fu_397_p4");
    sc_trace(mVcdFile, or_ln700_fu_407_p2, "or_ln700_fu_407_p2");
    sc_trace(mVcdFile, select_ln30_fu_413_p3, "select_ln30_fu_413_p3");
    sc_trace(mVcdFile, xor_ln29_1_fu_427_p2, "xor_ln29_1_fu_427_p2");
    sc_trace(mVcdFile, or_ln29_1_fu_432_p4, "or_ln29_1_fu_432_p4");
    sc_trace(mVcdFile, or_ln700_3_fu_442_p2, "or_ln700_3_fu_442_p2");
    sc_trace(mVcdFile, select_ln11_fu_420_p3, "select_ln11_fu_420_p3");
    sc_trace(mVcdFile, trunc_ln544_fu_455_p1, "trunc_ln544_fu_455_p1");
    sc_trace(mVcdFile, or_ln700_4_fu_459_p2, "or_ln700_4_fu_459_p2");
    sc_trace(mVcdFile, or_ln11_fu_473_p0, "or_ln11_fu_473_p0");
    sc_trace(mVcdFile, xor_ln11_fu_478_p0, "xor_ln11_fu_478_p0");
    sc_trace(mVcdFile, select_ln11_3_fu_484_p0, "select_ln11_3_fu_484_p0");
    sc_trace(mVcdFile, select_ln39_2_fu_448_p3, "select_ln39_2_fu_448_p3");
    sc_trace(mVcdFile, select_ln11_4_fu_493_p0, "select_ln11_4_fu_493_p0");
    sc_trace(mVcdFile, select_ln39_3_fu_465_p3, "select_ln39_3_fu_465_p3");
    sc_trace(mVcdFile, xor_ln29_2_fu_530_p2, "xor_ln29_2_fu_530_p2");
    sc_trace(mVcdFile, xor_ln29_3_fu_545_p2, "xor_ln29_3_fu_545_p2");
    sc_trace(mVcdFile, or_ln29_3_fu_550_p4, "or_ln29_3_fu_550_p4");
    sc_trace(mVcdFile, or_ln700_1_fu_560_p2, "or_ln700_1_fu_560_p2");
    sc_trace(mVcdFile, or_ln29_2_fu_535_p4, "or_ln29_2_fu_535_p4");
    sc_trace(mVcdFile, or_ln700_2_fu_573_p2, "or_ln700_2_fu_573_p2");
    sc_trace(mVcdFile, select_ln39_fu_566_p3, "select_ln39_fu_566_p3");
    sc_trace(mVcdFile, select_ln39_1_fu_579_p3, "select_ln39_1_fu_579_p3");
    sc_trace(mVcdFile, tmp_fu_652_p6, "tmp_fu_652_p6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_idle_pp0_1to1, "ap_idle_pp0_1to1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_44, "ap_condition_44");
    sc_trace(mVcdFile, ap_condition_320, "ap_condition_320");
#endif

    }
    mHdltvinHandle.open("stream.hdltvin.dat");
    mHdltvoutHandle.open("stream.hdltvout.dat");
}

stream::~stream() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete brams_V_0_U;
    delete brams_V_1_U;
    delete brams_V_2_U;
    delete brams_V_3_U;
    delete stream_mux_42_67_bkb_U1;
}

void stream::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())) {
            ap_enable_reg_pp0_iter0_reg = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_reg_801.read()))) {
        ap_phi_reg_pp0_iter1_p_0258_reg_347 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter1_p_0258_reg_347 = ap_phi_reg_pp0_iter0_p_0258_reg_347.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_44.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln24_reg_721.read())) {
            ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288 = ap_const_lv1_1;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288 = ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_288.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_reg_827.read()))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302 = ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_reg_827.read()))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302 = ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_302.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_reg_801.read()))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324 = ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_288.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324 = ap_phi_reg_pp0_iter0_ptrsep_V_flag_2_reg_324.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_reg_827.read()))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314 = t_V_3_reg_278.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_reg_827.read()))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314 = add_ln701_fu_646_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314 = ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_314.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_reg_801.read()))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335 = ap_phi_reg_pp0_iter0_ptrsep_V_new_2_reg_335.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_44.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln24_reg_721.read())) {
            ap_phi_reg_pp0_iter1_t_V_3_reg_278 = ap_sig_allocacmp_t_V_1.read();
        } else if (esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter1_t_V_3_reg_278 = add_ln700_1_fu_524_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_t_V_3_reg_278 = ap_phi_reg_pp0_iter0_t_V_3_reg_278.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_44.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln24_reg_721.read())) {
            ap_phi_reg_pp0_iter1_write_flag_2_reg_257 = eventstart_read_reg_714.read();
        } else if (esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter1_write_flag_2_reg_257 = or_ln11_fu_473_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_write_flag_2_reg_257 = ap_phi_reg_pp0_iter0_write_flag_2_reg_257.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_44.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln24_reg_721.read())) {
            ap_phi_reg_pp0_iter1_write_new_2_reg_267 = ap_const_lv1_1;
        } else if (esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter1_write_new_2_reg_267 = xor_ln11_fu_478_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_write_new_2_reg_267 = ap_phi_reg_pp0_iter0_write_new_2_reg_267.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read()))) {
        brams_V_0_load_reg_831 = brams_V_0_q0.read();
        brams_V_1_load_reg_836 = brams_V_1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        eventstart_read_reg_714 =  (sc_lv<1>) (eventstart.read());
        icmp_ln895_reg_801 = icmp_ln895_fu_602_p2.read();
        or_ln24_reg_721 = or_ln24_fu_382_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_fu_602_p2.read()))) {
        icmp_ln56_reg_827 = icmp_ln56_fu_628_p2.read();
        readidx_load_reg_811 = readidx.read();
        zext_ln544_1_reg_805 = zext_ln544_1_fu_618_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1))) {
        icmp_ln883_1_reg_741 = grp_fu_364_p2.read();
        icmp_ln883_reg_735 = grp_fu_358_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1))) {
        icmp_ln883_2_reg_768 = grp_fu_358_p2.read();
        icmp_ln883_3_reg_774 = grp_fu_364_p2.read();
        wrptr_V = add_ln700_fu_512_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        lastvalid_read_reg_757 =  (sc_lv<1>) (lastvalid.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4.read()))) {
        ptrsep_V = ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_fu_602_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_fu_628_p2.read()))) {
        rdptr_V = add_ln700_2_fu_634_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read()))) {
        readidx = add_ln60_fu_697_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1)))) {
        reg_370 = candin_V_q0.read();
        reg_374 = candin_V_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        t_V_3_reg_278 = ap_phi_reg_pp0_iter1_t_V_3_reg_278.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_write_flag_2_phi_fu_260_p4.read()))) {
        write_r = ap_phi_reg_pp0_iter1_write_new_2_reg_267.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1))) {
        zext_ln544_reg_790 = zext_ln544_fu_506_p1.read();
    }
}

void stream::thread_add_ln60_fu_697_p2() {
    add_ln60_fu_697_p2 = (!readidx_load_reg_811.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(readidx_load_reg_811.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void stream::thread_add_ln700_1_fu_524_p2() {
    add_ln700_1_fu_524_p2 = (!ap_const_lv9_1.is_01() || !ap_sig_allocacmp_t_V_1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(ap_sig_allocacmp_t_V_1.read()));
}

void stream::thread_add_ln700_2_fu_634_p2() {
    add_ln700_2_fu_634_p2 = (!rdptr_V.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(rdptr_V.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void stream::thread_add_ln700_fu_512_p2() {
    add_ln700_fu_512_p2 = (!ap_const_lv9_1.is_01() || !wrptr_V.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(wrptr_V.read()));
}

void stream::thread_add_ln701_fu_646_p2() {
    add_ln701_fu_646_p2 = (!t_V_3_reg_278.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(t_V_3_reg_278.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void stream::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void stream::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[1];
}

void stream::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[2];
}

void stream::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()));
}

void stream::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()));
}

void stream::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_pp0_stage2_01001() {
    ap_block_pp0_stage2_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read());
}

void stream::thread_ap_block_state2_pp0_stage1_iter0() {
    ap_block_state2_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_state3_pp0_stage2_iter0() {
    ap_block_state3_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_state5_pp0_stage1_iter1() {
    ap_block_state5_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_block_state6_pp0_stage2_iter1() {
    ap_block_state6_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void stream::thread_ap_condition_320() {
    ap_condition_320 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0));
}

void stream::thread_ap_condition_44() {
    ap_condition_44 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0));
}

void stream::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void stream::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void stream::thread_ap_enable_reg_pp0_iter0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())) {
        ap_enable_reg_pp0_iter0 = ap_start.read();
    } else {
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg.read();
    }
}

void stream::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void stream::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void stream::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void stream::thread_ap_idle_pp0_1to1() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read())) {
        ap_idle_pp0_1to1 = ap_const_logic_1;
    } else {
        ap_idle_pp0_1to1 = ap_const_logic_0;
    }
}

void stream::thread_ap_phi_mux_p_0258_phi_fu_351_p4() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read())) {
        ap_phi_mux_p_0258_phi_fu_351_p4 = trunc_ln544_1_fu_663_p1.read();
    } else {
        ap_phi_mux_p_0258_phi_fu_351_p4 = ap_phi_reg_pp0_iter1_p_0258_reg_347.read();
    }
}

void stream::thread_ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read())) {
        ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4 = ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_302.read();
    } else {
        ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4 = ap_phi_reg_pp0_iter1_ptrsep_V_flag_2_reg_324.read();
    }
}

void stream::thread_ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read())) {
        ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4 = ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_314.read();
    } else {
        ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4 = ap_phi_reg_pp0_iter1_ptrsep_V_new_2_reg_335.read();
    }
}

void stream::thread_ap_phi_mux_write_flag_2_phi_fu_260_p4() {
    ap_phi_mux_write_flag_2_phi_fu_260_p4 = ap_phi_reg_pp0_iter1_write_flag_2_reg_257.read();
}

void stream::thread_ap_phi_reg_pp0_iter0_p_0258_reg_347() {
    ap_phi_reg_pp0_iter0_p_0258_reg_347 =  (sc_lv<1>) ("X");
}

void stream::thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_288() {
    ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_288 =  (sc_lv<1>) ("X");
}

void stream::thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_302() {
    ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_302 =  (sc_lv<1>) ("X");
}

void stream::thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_2_reg_324() {
    ap_phi_reg_pp0_iter0_ptrsep_V_flag_2_reg_324 =  (sc_lv<1>) ("X");
}

void stream::thread_ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_314() {
    ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_314 = "XXXXXXXXX";
}

void stream::thread_ap_phi_reg_pp0_iter0_ptrsep_V_new_2_reg_335() {
    ap_phi_reg_pp0_iter0_ptrsep_V_new_2_reg_335 = "XXXXXXXXX";
}

void stream::thread_ap_phi_reg_pp0_iter0_t_V_3_reg_278() {
    ap_phi_reg_pp0_iter0_t_V_3_reg_278 = "XXXXXXXXX";
}

void stream::thread_ap_phi_reg_pp0_iter0_write_flag_2_reg_257() {
    ap_phi_reg_pp0_iter0_write_flag_2_reg_257 =  (sc_lv<1>) ("X");
}

void stream::thread_ap_phi_reg_pp0_iter0_write_new_2_reg_267() {
    ap_phi_reg_pp0_iter0_write_new_2_reg_267 =  (sc_lv<1>) ("X");
}

void stream::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void stream::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void stream::thread_ap_return() {
    ap_return = ap_phi_mux_p_0258_phi_fu_351_p4.read();
}

void stream::thread_ap_sig_allocacmp_t_V_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_ptrsep_V_flag_2_phi_fu_327_p4.read()))) {
        ap_sig_allocacmp_t_V_1 = ap_phi_mux_ptrsep_V_new_2_phi_fu_339_p4.read();
    } else {
        ap_sig_allocacmp_t_V_1 = ptrsep_V.read();
    }
}

void stream::thread_ap_sig_allocacmp_write_load() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_write_flag_2_phi_fu_260_p4.read()))) {
        ap_sig_allocacmp_write_load = ap_phi_reg_pp0_iter1_write_new_2_reg_267.read();
    } else {
        ap_sig_allocacmp_write_load = write_r.read();
    }
}

void stream::thread_brams_V_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        brams_V_0_address0 =  (sc_lv<9>) (zext_ln544_1_fu_618_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        brams_V_0_address0 =  (sc_lv<9>) (zext_ln544_fu_506_p1.read());
    } else {
        brams_V_0_address0 = "XXXXXXXXX";
    }
}

void stream::thread_brams_V_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        brams_V_0_ce0 = ap_const_logic_1;
    } else {
        brams_V_0_ce0 = ap_const_logic_0;
    }
}

void stream::thread_brams_V_0_d0() {
    brams_V_0_d0 = (!select_ln11_4_fu_493_p0.read()[0].is_01())? sc_lv<67>(): ((select_ln11_4_fu_493_p0.read()[0].to_bool())? select_ln39_3_fu_465_p3.read(): select_ln11_fu_420_p3.read());
}

void stream::thread_brams_V_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1))) {
        brams_V_0_we0 = ap_const_logic_1;
    } else {
        brams_V_0_we0 = ap_const_logic_0;
    }
}

void stream::thread_brams_V_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        brams_V_1_address0 =  (sc_lv<9>) (zext_ln544_1_fu_618_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        brams_V_1_address0 =  (sc_lv<9>) (zext_ln544_fu_506_p1.read());
    } else {
        brams_V_1_address0 = "XXXXXXXXX";
    }
}

void stream::thread_brams_V_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        brams_V_1_ce0 = ap_const_logic_1;
    } else {
        brams_V_1_ce0 = ap_const_logic_0;
    }
}

void stream::thread_brams_V_1_d0() {
    brams_V_1_d0 = (!select_ln11_3_fu_484_p0.read()[0].is_01())? sc_lv<67>(): ((select_ln11_3_fu_484_p0.read()[0].to_bool())? select_ln39_2_fu_448_p3.read(): or_ln29_1_fu_432_p4.read());
}

void stream::thread_brams_V_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1))) {
        brams_V_1_we0 = ap_const_logic_1;
    } else {
        brams_V_1_we0 = ap_const_logic_0;
    }
}

void stream::thread_brams_V_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            brams_V_2_address0 =  (sc_lv<9>) (zext_ln544_1_reg_805.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            brams_V_2_address0 =  (sc_lv<9>) (zext_ln544_reg_790.read());
        } else {
            brams_V_2_address0 = "XXXXXXXXX";
        }
    } else {
        brams_V_2_address0 = "XXXXXXXXX";
    }
}

void stream::thread_brams_V_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        brams_V_2_ce0 = ap_const_logic_1;
    } else {
        brams_V_2_ce0 = ap_const_logic_0;
    }
}

void stream::thread_brams_V_2_d0() {
    brams_V_2_d0 = (!lastvalid_read_reg_757.read()[0].is_01())? sc_lv<67>(): ((lastvalid_read_reg_757.read()[0].to_bool())? select_ln39_1_fu_579_p3.read(): or_ln29_2_fu_535_p4.read());
}

void stream::thread_brams_V_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        brams_V_2_we0 = ap_const_logic_1;
    } else {
        brams_V_2_we0 = ap_const_logic_0;
    }
}

void stream::thread_brams_V_3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            brams_V_3_address0 =  (sc_lv<9>) (zext_ln544_1_reg_805.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            brams_V_3_address0 =  (sc_lv<9>) (zext_ln544_reg_790.read());
        } else {
            brams_V_3_address0 = "XXXXXXXXX";
        }
    } else {
        brams_V_3_address0 = "XXXXXXXXX";
    }
}

void stream::thread_brams_V_3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        brams_V_3_ce0 = ap_const_logic_1;
    } else {
        brams_V_3_ce0 = ap_const_logic_0;
    }
}

void stream::thread_brams_V_3_d0() {
    brams_V_3_d0 = (!lastvalid_read_reg_757.read()[0].is_01())? sc_lv<67>(): ((lastvalid_read_reg_757.read()[0].to_bool())? select_ln39_fu_566_p3.read(): or_ln29_3_fu_550_p4.read());
}

void stream::thread_brams_V_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(or_ln24_reg_721.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        brams_V_3_we0 = ap_const_logic_1;
    } else {
        brams_V_3_we0 = ap_const_logic_0;
    }
}

void stream::thread_candin_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            candin_V_address0 =  (sc_lv<2>) (ap_const_lv64_2);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            candin_V_address0 =  (sc_lv<2>) (ap_const_lv64_0);
        } else {
            candin_V_address0 =  (sc_lv<2>) ("XX");
        }
    } else {
        candin_V_address0 =  (sc_lv<2>) ("XX");
    }
}

void stream::thread_candin_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            candin_V_address1 =  (sc_lv<2>) (ap_const_lv64_3);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            candin_V_address1 =  (sc_lv<2>) (ap_const_lv64_1);
        } else {
            candin_V_address1 =  (sc_lv<2>) ("XX");
        }
    } else {
        candin_V_address1 =  (sc_lv<2>) ("XX");
    }
}

void stream::thread_candin_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        candin_V_ce0 = ap_const_logic_1;
    } else {
        candin_V_ce0 = ap_const_logic_0;
    }
}

void stream::thread_candin_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        candin_V_ce1 = ap_const_logic_1;
    } else {
        candin_V_ce1 = ap_const_logic_0;
    }
}

void stream::thread_candout_V() {
    if (esl_seteq<1,1,1>(ap_condition_320.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_reg_801.read())) {
            candout_V = ap_const_lv64_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read())) {
            candout_V = tmp_fu_652_p6.read().range(66, 3);
        } else {
            candout_V =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        candout_V =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void stream::thread_candout_V_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_reg_801.read())))) {
        candout_V_ap_vld = ap_const_logic_1;
    } else {
        candout_V_ap_vld = ap_const_logic_0;
    }
}

void stream::thread_first() {
    if (esl_seteq<1,1,1>(ap_condition_320.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_reg_801.read())) {
            first =  (sc_logic) (ap_const_lv1_0[0]);
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read())) {
            first =  (sc_logic) (tmp_fu_652_p6.read()[1]);
        } else {
            first = sc_logic('X');
        }
    } else {
        first = sc_logic('X');
    }
}

void stream::thread_first_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_reg_801.read())))) {
        first_ap_vld = ap_const_logic_1;
    } else {
        first_ap_vld = ap_const_logic_0;
    }
}

void stream::thread_grp_fu_358_p2() {
    grp_fu_358_p2 = (!candin_V_q0.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(candin_V_q0.read() == ap_const_lv64_0);
}

void stream::thread_grp_fu_364_p2() {
    grp_fu_364_p2 = (!candin_V_q1.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(candin_V_q1.read() == ap_const_lv64_0);
}

void stream::thread_icmp_ln56_fu_628_p2() {
    icmp_ln56_fu_628_p2 = (!readidx.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(readidx.read() == ap_const_lv2_3);
}

void stream::thread_icmp_ln895_fu_602_p2() {
    icmp_ln895_fu_602_p2 = (!ap_phi_reg_pp0_iter1_t_V_3_reg_278.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_reg_pp0_iter1_t_V_3_reg_278.read() == ap_const_lv9_0);
}

void stream::thread_last() {
    if (esl_seteq<1,1,1>(ap_condition_320.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_reg_801.read())) {
            last =  (sc_logic) (ap_const_lv1_0[0]);
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read())) {
            last =  (sc_logic) (tmp_fu_652_p6.read()[2]);
        } else {
            last = sc_logic('X');
        }
    } else {
        last = sc_logic('X');
    }
}

void stream::thread_last_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_801.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln895_reg_801.read())))) {
        last_ap_vld = ap_const_logic_1;
    } else {
        last_ap_vld = ap_const_logic_0;
    }
}

void stream::thread_or_ln11_fu_473_p0() {
    or_ln11_fu_473_p0 =  (sc_lv<1>) (lastvalid.read());
}

void stream::thread_or_ln11_fu_473_p2() {
    or_ln11_fu_473_p2 = (or_ln11_fu_473_p0.read() | eventstart_read_reg_714.read());
}

void stream::thread_or_ln24_fu_382_p1() {
    or_ln24_fu_382_p1 =  (sc_lv<1>) (eventstart.read());
}

void stream::thread_or_ln24_fu_382_p2() {
    or_ln24_fu_382_p2 = (ap_sig_allocacmp_write_load.read() | or_ln24_fu_382_p1.read());
}

void stream::thread_or_ln29_1_fu_432_p4() {
    or_ln29_1_fu_432_p4 = esl_concat<66,1>(esl_concat<64,2>(reg_374.read(), ap_const_lv2_0), xor_ln29_1_fu_427_p2.read());
}

void stream::thread_or_ln29_2_fu_535_p4() {
    or_ln29_2_fu_535_p4 = esl_concat<66,1>(esl_concat<64,2>(reg_370.read(), ap_const_lv2_0), xor_ln29_2_fu_530_p2.read());
}

void stream::thread_or_ln29_3_fu_550_p4() {
    or_ln29_3_fu_550_p4 = esl_concat<66,1>(esl_concat<64,2>(reg_374.read(), ap_const_lv2_0), xor_ln29_3_fu_545_p2.read());
}

void stream::thread_or_ln700_1_fu_560_p2() {
    or_ln700_1_fu_560_p2 = (or_ln29_3_fu_550_p4.read() | ap_const_lv67_4);
}

void stream::thread_or_ln700_2_fu_573_p2() {
    or_ln700_2_fu_573_p2 = (or_ln29_2_fu_535_p4.read() | ap_const_lv67_4);
}

void stream::thread_or_ln700_3_fu_442_p2() {
    or_ln700_3_fu_442_p2 = (or_ln29_1_fu_432_p4.read() | ap_const_lv67_4);
}

void stream::thread_or_ln700_4_fu_459_p2() {
    or_ln700_4_fu_459_p2 = (select_ln11_fu_420_p3.read() | ap_const_lv67_4);
}

void stream::thread_or_ln700_fu_407_p2() {
    or_ln700_fu_407_p2 = (or_ln_fu_397_p4.read() | ap_const_lv67_2);
}

void stream::thread_or_ln_fu_397_p4() {
    or_ln_fu_397_p4 = esl_concat<66,1>(esl_concat<64,2>(reg_370.read(), ap_const_lv2_0), xor_ln29_fu_392_p2.read());
}

void stream::thread_select_ln11_3_fu_484_p0() {
    select_ln11_3_fu_484_p0 =  (sc_lv<1>) (lastvalid.read());
}

void stream::thread_select_ln11_4_fu_493_p0() {
    select_ln11_4_fu_493_p0 =  (sc_lv<1>) (lastvalid.read());
}

void stream::thread_select_ln11_fu_420_p3() {
    select_ln11_fu_420_p3 = (!eventstart_read_reg_714.read()[0].is_01())? sc_lv<67>(): ((eventstart_read_reg_714.read()[0].to_bool())? select_ln30_fu_413_p3.read(): or_ln_fu_397_p4.read());
}

void stream::thread_select_ln30_fu_413_p3() {
    select_ln30_fu_413_p3 = (!icmp_ln883_reg_735.read()[0].is_01())? sc_lv<67>(): ((icmp_ln883_reg_735.read()[0].to_bool())? or_ln_fu_397_p4.read(): or_ln700_fu_407_p2.read());
}

void stream::thread_select_ln39_1_fu_579_p3() {
    select_ln39_1_fu_579_p3 = (!icmp_ln883_2_reg_768.read()[0].is_01())? sc_lv<67>(): ((icmp_ln883_2_reg_768.read()[0].to_bool())? or_ln29_2_fu_535_p4.read(): or_ln700_2_fu_573_p2.read());
}

void stream::thread_select_ln39_2_fu_448_p3() {
    select_ln39_2_fu_448_p3 = (!icmp_ln883_1_reg_741.read()[0].is_01())? sc_lv<67>(): ((icmp_ln883_1_reg_741.read()[0].to_bool())? or_ln29_1_fu_432_p4.read(): or_ln700_3_fu_442_p2.read());
}

void stream::thread_select_ln39_3_fu_465_p3() {
    select_ln39_3_fu_465_p3 = (!trunc_ln544_fu_455_p1.read()[0].is_01())? sc_lv<67>(): ((trunc_ln544_fu_455_p1.read()[0].to_bool())? or_ln700_4_fu_459_p2.read(): select_ln11_fu_420_p3.read());
}

void stream::thread_select_ln39_fu_566_p3() {
    select_ln39_fu_566_p3 = (!icmp_ln883_3_reg_774.read()[0].is_01())? sc_lv<67>(): ((icmp_ln883_3_reg_774.read()[0].to_bool())? or_ln29_3_fu_550_p4.read(): or_ln700_1_fu_560_p2.read());
}

void stream::thread_trunc_ln544_1_fu_663_p1() {
    trunc_ln544_1_fu_663_p1 = tmp_fu_652_p6.read().range(1-1, 0);
}

void stream::thread_trunc_ln544_fu_455_p1() {
    trunc_ln544_fu_455_p1 = select_ln11_fu_420_p3.read().range(1-1, 0);
}

void stream::thread_xor_ln11_fu_478_p0() {
    xor_ln11_fu_478_p0 =  (sc_lv<1>) (lastvalid.read());
}

void stream::thread_xor_ln11_fu_478_p2() {
    xor_ln11_fu_478_p2 = (xor_ln11_fu_478_p0.read() ^ ap_const_lv1_1);
}

void stream::thread_xor_ln29_1_fu_427_p2() {
    xor_ln29_1_fu_427_p2 = (icmp_ln883_1_reg_741.read() ^ ap_const_lv1_1);
}

void stream::thread_xor_ln29_2_fu_530_p2() {
    xor_ln29_2_fu_530_p2 = (icmp_ln883_2_reg_768.read() ^ ap_const_lv1_1);
}

void stream::thread_xor_ln29_3_fu_545_p2() {
    xor_ln29_3_fu_545_p2 = (icmp_ln883_3_reg_774.read() ^ ap_const_lv1_1);
}

void stream::thread_xor_ln29_fu_392_p2() {
    xor_ln29_fu_392_p2 = (icmp_ln883_reg_735.read() ^ ap_const_lv1_1);
}

void stream::thread_zext_ln544_1_fu_618_p1() {
    zext_ln544_1_fu_618_p1 = esl_zext<64,9>(rdptr_V.read());
}

void stream::thread_zext_ln544_fu_506_p1() {
    zext_ln544_fu_506_p1 = esl_zext<64,9>(wrptr_V.read());
}

void stream::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_1to1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 4 : 
            if (((esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reset_idle_pp0.read())) || (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<3>) ("XXX");
            break;
    }
}

void stream::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"candin_V_address0\" :  \"" << candin_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"candin_V_ce0\" :  \"" << candin_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"candin_V_q0\" :  \"" << candin_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"candin_V_address1\" :  \"" << candin_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"candin_V_ce1\" :  \"" << candin_V_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"candin_V_q1\" :  \"" << candin_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"candout_V\" :  \"" << candout_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"candout_V_ap_vld\" :  \"" << candout_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eventstart\" :  \"" << eventstart.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"lastvalid\" :  \"" << lastvalid.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"first\" :  \"" << first.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"first_ap_vld\" :  \"" << first_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"last\" :  \"" << last.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"last_ap_vld\" :  \"" << last_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

