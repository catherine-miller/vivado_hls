// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _stream_HH_
#define _stream_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "stream_mux_42_67_bkb.h"
#include "stream_brams_V_0.h"

namespace ap_rtl {

struct stream : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > candin_0_V;
    sc_in< sc_lv<64> > candin_1_V;
    sc_in< sc_lv<64> > candin_2_V;
    sc_in< sc_lv<64> > candin_3_V;
    sc_out< sc_lv<64> > candout_V;
    sc_out< sc_logic > candout_V_ap_vld;
    sc_in< sc_logic > eventstart;
    sc_in< sc_logic > lastvalid;
    sc_out< sc_logic > first;
    sc_out< sc_logic > first_ap_vld;
    sc_out< sc_logic > last;
    sc_out< sc_logic > last_ap_vld;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    stream(sc_module_name name);
    SC_HAS_PROCESS(stream);

    ~stream();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    stream_brams_V_0* brams_V_0_U;
    stream_brams_V_0* brams_V_1_U;
    stream_brams_V_0* brams_V_2_U;
    stream_brams_V_0* brams_V_3_U;
    stream_mux_42_67_bkb<1,1,67,67,67,67,2,67>* stream_mux_42_67_bkb_U1;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > write_r;
    sc_signal< sc_lv<9> > ptrsep_V;
    sc_signal< sc_lv<9> > wrptr_V;
    sc_signal< sc_lv<9> > brams_V_0_address0;
    sc_signal< sc_logic > brams_V_0_ce0;
    sc_signal< sc_logic > brams_V_0_we0;
    sc_signal< sc_lv<67> > brams_V_0_d0;
    sc_signal< sc_lv<9> > brams_V_0_address1;
    sc_signal< sc_logic > brams_V_0_ce1;
    sc_signal< sc_lv<67> > brams_V_0_q1;
    sc_signal< sc_lv<9> > brams_V_1_address0;
    sc_signal< sc_logic > brams_V_1_ce0;
    sc_signal< sc_logic > brams_V_1_we0;
    sc_signal< sc_lv<67> > brams_V_1_d0;
    sc_signal< sc_lv<9> > brams_V_1_address1;
    sc_signal< sc_logic > brams_V_1_ce1;
    sc_signal< sc_lv<67> > brams_V_1_q1;
    sc_signal< sc_lv<9> > brams_V_2_address0;
    sc_signal< sc_logic > brams_V_2_ce0;
    sc_signal< sc_logic > brams_V_2_we0;
    sc_signal< sc_lv<67> > brams_V_2_d0;
    sc_signal< sc_lv<9> > brams_V_2_address1;
    sc_signal< sc_logic > brams_V_2_ce1;
    sc_signal< sc_lv<67> > brams_V_2_q1;
    sc_signal< sc_lv<9> > brams_V_3_address0;
    sc_signal< sc_logic > brams_V_3_ce0;
    sc_signal< sc_logic > brams_V_3_we0;
    sc_signal< sc_lv<67> > brams_V_3_d0;
    sc_signal< sc_lv<9> > brams_V_3_address1;
    sc_signal< sc_logic > brams_V_3_ce1;
    sc_signal< sc_lv<67> > brams_V_3_q1;
    sc_signal< sc_lv<9> > rdptr_V;
    sc_signal< sc_lv<2> > readidx_V;
    sc_signal< sc_lv<9> > t_V_3_reg_258;
    sc_signal< sc_lv<1> > lastvalid_read_reg_772;
    sc_signal< sc_lv<1> > eventstart_read_reg_783;
    sc_signal< sc_lv<64> > candin_0_V_read_reg_789;
    sc_signal< sc_lv<1> > icmp_ln879_fu_335_p2;
    sc_signal< sc_lv<1> > icmp_ln879_reg_795;
    sc_signal< sc_lv<64> > candin_1_V_read_reg_803;
    sc_signal< sc_lv<1> > icmp_ln879_2_fu_341_p2;
    sc_signal< sc_lv<1> > icmp_ln879_2_reg_808;
    sc_signal< sc_lv<64> > candin_2_V_read_reg_814;
    sc_signal< sc_lv<1> > icmp_ln879_4_fu_347_p2;
    sc_signal< sc_lv<1> > icmp_ln879_4_reg_819;
    sc_signal< sc_lv<64> > candin_3_V_read_reg_825;
    sc_signal< sc_lv<1> > icmp_ln879_3_fu_353_p2;
    sc_signal< sc_lv<1> > icmp_ln879_3_reg_830;
    sc_signal< sc_lv<1> > icmp_ln791_fu_365_p2;
    sc_signal< sc_lv<1> > icmp_ln791_reg_836;
    sc_signal< sc_lv<1> > icmp_ln791_1_fu_371_p2;
    sc_signal< sc_lv<1> > icmp_ln791_1_reg_841;
    sc_signal< sc_lv<1> > or_ln27_fu_381_p2;
    sc_signal< sc_lv<1> > or_ln27_reg_847;
    sc_signal< sc_lv<1> > or_ln69_fu_635_p2;
    sc_signal< sc_lv<1> > icmp_ln895_fu_662_p2;
    sc_signal< sc_lv<1> > icmp_ln895_reg_855;
    sc_signal< sc_lv<2> > readidx_V_load_reg_859;
    sc_signal< sc_lv<1> > icmp_ln879_1_fu_684_p2;
    sc_signal< sc_lv<1> > icmp_ln879_1_reg_885;
    sc_signal< sc_lv<9> > add_ln701_fu_702_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<9> > ap_phi_mux_t_V_3_phi_fu_261_p4;
    sc_signal< sc_lv<9> > add_ln700_1_fu_655_p2;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter2_t_V_3_reg_258;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_268;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_268;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter2_ptrsep_V_flag_0_reg_268;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_268;
    sc_signal< sc_lv<1> > ap_phi_mux_ptrsep_V_flag_1_phi_fu_285_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_281;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_281;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter2_ptrsep_V_flag_1_reg_281;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_281;
    sc_signal< sc_lv<9> > ap_phi_mux_ptrsep_V_new_1_phi_fu_296_p4;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_293;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_293;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter2_ptrsep_V_new_1_reg_293;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_293;
    sc_signal< sc_lv<1> > ap_phi_mux_ptrsep_V_flag_2_phi_fu_306_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_303;
    sc_signal< sc_lv<9> > ap_phi_mux_ptrsep_V_new_2_phi_fu_317_p4;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_314;
    sc_signal< sc_lv<1> > ap_phi_mux_p_0202_phi_fu_328_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter3_p_0202_reg_325;
    sc_signal< sc_lv<1> > p_Result_2_fu_721_p1;
    sc_signal< sc_lv<64> > zext_ln544_fu_615_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln544_1_fu_672_p1;
    sc_signal< sc_lv<1> > xor_ln69_fu_639_p2;
    sc_signal< sc_lv<9> > ap_sig_allocacmp_t_V_1;
    sc_signal< sc_lv<9> > add_ln700_fu_623_p2;
    sc_signal< sc_lv<9> > add_ln700_2_fu_690_p2;
    sc_signal< sc_lv<2> > add_ln214_fu_755_p2;
    sc_signal< sc_lv<2> > ap_sig_allocacmp_readidx_V_load;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<64> > or_ln791_fu_359_p2;
    sc_signal< sc_lv<67> > p_Result_18_1_fu_397_p5;
    sc_signal< sc_lv<1> > xor_ln879_fu_408_p2;
    sc_signal< sc_lv<67> > p_Result_18_2_fu_423_p5;
    sc_signal< sc_lv<67> > p_Result_18_3_fu_443_p5;
    sc_signal< sc_lv<1> > xor_ln879_1_fu_454_p2;
    sc_signal< sc_lv<67> > p_Result_s_fu_386_p5;
    sc_signal< sc_lv<2> > tmp_1_fu_469_p3;
    sc_signal< sc_lv<67> > tmp_3_fu_459_p4;
    sc_signal< sc_lv<67> > tmp_2_fu_434_p4;
    sc_signal< sc_lv<1> > and_ln791_fu_498_p2;
    sc_signal< sc_lv<1> > or_ln791_1_fu_512_p2;
    sc_signal< sc_lv<1> > or_ln791_2_fu_517_p2;
    sc_signal< sc_lv<67> > tmp_4_fu_488_p4;
    sc_signal< sc_lv<67> > tmp_5_fu_502_p4;
    sc_signal< sc_lv<1> > xor_ln791_fu_543_p2;
    sc_signal< sc_lv<1> > and_ln791_3_fu_552_p2;
    sc_signal< sc_lv<1> > and_ln791_2_fu_548_p2;
    sc_signal< sc_lv<1> > and_ln791_4_fu_557_p2;
    sc_signal< sc_lv<1> > and_ln791_1_fu_522_p2;
    sc_signal< sc_lv<1> > xor_ln791_1_fu_563_p2;
    sc_signal< sc_lv<67> > tmp_fu_413_p4;
    sc_signal< sc_lv<1> > and_ln791_5_fu_569_p2;
    sc_signal< sc_lv<67> > tmp_6_fu_575_p4;
    sc_signal< sc_lv<67> > sel_tmp1_fu_593_p5;
    sc_signal< sc_lv<67> > p_Result_3_3_fu_476_p5;
    sc_signal< sc_lv<67> > p_Val2_s_fu_708_p6;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to2;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<67> ap_const_lv67_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_42;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<9> ap_const_lv9_1FF;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln214_fu_755_p2();
    void thread_add_ln700_1_fu_655_p2();
    void thread_add_ln700_2_fu_690_p2();
    void thread_add_ln700_fu_623_p2();
    void thread_add_ln701_fu_702_p2();
    void thread_and_ln791_1_fu_522_p2();
    void thread_and_ln791_2_fu_548_p2();
    void thread_and_ln791_3_fu_552_p2();
    void thread_and_ln791_4_fu_557_p2();
    void thread_and_ln791_5_fu_569_p2();
    void thread_and_ln791_fu_498_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to2();
    void thread_ap_phi_mux_p_0202_phi_fu_328_p4();
    void thread_ap_phi_mux_ptrsep_V_flag_1_phi_fu_285_p4();
    void thread_ap_phi_mux_ptrsep_V_flag_2_phi_fu_306_p4();
    void thread_ap_phi_mux_ptrsep_V_new_1_phi_fu_296_p4();
    void thread_ap_phi_mux_ptrsep_V_new_2_phi_fu_317_p4();
    void thread_ap_phi_mux_t_V_3_phi_fu_261_p4();
    void thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_268();
    void thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_281();
    void thread_ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_293();
    void thread_ap_phi_reg_pp0_iter2_t_V_3_reg_258();
    void thread_ap_phi_reg_pp0_iter3_p_0202_reg_325();
    void thread_ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_303();
    void thread_ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_314();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_ap_sig_allocacmp_readidx_V_load();
    void thread_ap_sig_allocacmp_t_V_1();
    void thread_brams_V_0_address0();
    void thread_brams_V_0_address1();
    void thread_brams_V_0_ce0();
    void thread_brams_V_0_ce1();
    void thread_brams_V_0_d0();
    void thread_brams_V_0_we0();
    void thread_brams_V_1_address0();
    void thread_brams_V_1_address1();
    void thread_brams_V_1_ce0();
    void thread_brams_V_1_ce1();
    void thread_brams_V_1_d0();
    void thread_brams_V_1_we0();
    void thread_brams_V_2_address0();
    void thread_brams_V_2_address1();
    void thread_brams_V_2_ce0();
    void thread_brams_V_2_ce1();
    void thread_brams_V_2_d0();
    void thread_brams_V_2_we0();
    void thread_brams_V_3_address0();
    void thread_brams_V_3_address1();
    void thread_brams_V_3_ce0();
    void thread_brams_V_3_ce1();
    void thread_brams_V_3_d0();
    void thread_brams_V_3_we0();
    void thread_candout_V();
    void thread_candout_V_ap_vld();
    void thread_first();
    void thread_first_ap_vld();
    void thread_icmp_ln791_1_fu_371_p2();
    void thread_icmp_ln791_fu_365_p2();
    void thread_icmp_ln879_1_fu_684_p2();
    void thread_icmp_ln879_2_fu_341_p2();
    void thread_icmp_ln879_3_fu_353_p2();
    void thread_icmp_ln879_4_fu_347_p2();
    void thread_icmp_ln879_fu_335_p2();
    void thread_icmp_ln895_fu_662_p2();
    void thread_last();
    void thread_last_ap_vld();
    void thread_or_ln27_fu_381_p2();
    void thread_or_ln69_fu_635_p2();
    void thread_or_ln791_1_fu_512_p2();
    void thread_or_ln791_2_fu_517_p2();
    void thread_or_ln791_fu_359_p2();
    void thread_p_Result_18_1_fu_397_p5();
    void thread_p_Result_18_2_fu_423_p5();
    void thread_p_Result_18_3_fu_443_p5();
    void thread_p_Result_2_fu_721_p1();
    void thread_p_Result_3_3_fu_476_p5();
    void thread_p_Result_s_fu_386_p5();
    void thread_sel_tmp1_fu_593_p5();
    void thread_tmp_1_fu_469_p3();
    void thread_tmp_2_fu_434_p4();
    void thread_tmp_3_fu_459_p4();
    void thread_tmp_4_fu_488_p4();
    void thread_tmp_5_fu_502_p4();
    void thread_tmp_6_fu_575_p4();
    void thread_tmp_fu_413_p4();
    void thread_xor_ln69_fu_639_p2();
    void thread_xor_ln791_1_fu_563_p2();
    void thread_xor_ln791_fu_543_p2();
    void thread_xor_ln879_1_fu_454_p2();
    void thread_xor_ln879_fu_408_p2();
    void thread_zext_ln544_1_fu_672_p1();
    void thread_zext_ln544_fu_615_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
