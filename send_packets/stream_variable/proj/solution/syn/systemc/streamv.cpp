// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "streamv.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic streamv::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic streamv::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> streamv::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> streamv::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool streamv::ap_const_boolean_1 = true;
const bool streamv::ap_const_boolean_0 = false;
const sc_lv<1> streamv::ap_const_lv1_0 = "0";
const sc_lv<9> streamv::ap_const_lv9_0 = "000000000";
const sc_lv<2> streamv::ap_const_lv2_0 = "00";
const sc_lv<1> streamv::ap_const_lv1_1 = "1";
const sc_lv<64> streamv::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<67> streamv::ap_const_lv67_0 = "0000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> streamv::ap_const_lv32_3 = "11";
const sc_lv<32> streamv::ap_const_lv32_42 = "1000010";
const sc_lv<32> streamv::ap_const_lv32_1 = "1";
const sc_lv<9> streamv::ap_const_lv9_1 = "1";
const sc_lv<2> streamv::ap_const_lv2_3 = "11";
const sc_lv<9> streamv::ap_const_lv9_1FF = "111111111";
const sc_lv<32> streamv::ap_const_lv32_2 = "10";
const sc_lv<2> streamv::ap_const_lv2_1 = "1";

streamv::streamv(sc_module_name name) : sc_module(name), mVcdFile(0) {
    brams_V_0_U = new streamv_brams_V_0("brams_V_0_U");
    brams_V_0_U->clk(ap_clk);
    brams_V_0_U->reset(ap_rst);
    brams_V_0_U->address0(brams_V_0_address0);
    brams_V_0_U->ce0(brams_V_0_ce0);
    brams_V_0_U->we0(brams_V_0_we0);
    brams_V_0_U->d0(brams_V_0_d0);
    brams_V_0_U->address1(brams_V_0_address1);
    brams_V_0_U->ce1(brams_V_0_ce1);
    brams_V_0_U->q1(brams_V_0_q1);
    brams_V_1_U = new streamv_brams_V_0("brams_V_1_U");
    brams_V_1_U->clk(ap_clk);
    brams_V_1_U->reset(ap_rst);
    brams_V_1_U->address0(brams_V_1_address0);
    brams_V_1_U->ce0(brams_V_1_ce0);
    brams_V_1_U->we0(brams_V_1_we0);
    brams_V_1_U->d0(brams_V_1_d0);
    brams_V_1_U->address1(brams_V_1_address1);
    brams_V_1_U->ce1(brams_V_1_ce1);
    brams_V_1_U->q1(brams_V_1_q1);
    brams_V_2_U = new streamv_brams_V_0("brams_V_2_U");
    brams_V_2_U->clk(ap_clk);
    brams_V_2_U->reset(ap_rst);
    brams_V_2_U->address0(brams_V_2_address0);
    brams_V_2_U->ce0(brams_V_2_ce0);
    brams_V_2_U->we0(brams_V_2_we0);
    brams_V_2_U->d0(brams_V_2_d0);
    brams_V_2_U->address1(brams_V_2_address1);
    brams_V_2_U->ce1(brams_V_2_ce1);
    brams_V_2_U->q1(brams_V_2_q1);
    brams_V_3_U = new streamv_brams_V_0("brams_V_3_U");
    brams_V_3_U->clk(ap_clk);
    brams_V_3_U->reset(ap_rst);
    brams_V_3_U->address0(brams_V_3_address0);
    brams_V_3_U->ce0(brams_V_3_ce0);
    brams_V_3_U->we0(brams_V_3_we0);
    brams_V_3_U->d0(brams_V_3_d0);
    brams_V_3_U->address1(brams_V_3_address1);
    brams_V_3_U->ce1(brams_V_3_ce1);
    brams_V_3_U->q1(brams_V_3_q1);
    streamv_mux_42_67bkb_U1 = new streamv_mux_42_67bkb<1,1,67,67,67,67,2,67>("streamv_mux_42_67bkb_U1");
    streamv_mux_42_67bkb_U1->din0(brams_V_0_q1);
    streamv_mux_42_67bkb_U1->din1(brams_V_1_q1);
    streamv_mux_42_67bkb_U1->din2(brams_V_2_q1);
    streamv_mux_42_67bkb_U1->din3(brams_V_3_q1);
    streamv_mux_42_67bkb_U1->din4(readidx_V_load_reg_897);
    streamv_mux_42_67bkb_U1->dout(p_Val2_s_fu_736_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln214_fu_783_p2);
    sensitive << ( readidx_V_load_reg_897 );

    SC_METHOD(thread_add_ln700_1_fu_683_p2);
    sensitive << ( ap_sig_allocacmp_t_V_1 );

    SC_METHOD(thread_add_ln700_2_fu_718_p2);
    sensitive << ( rdptr_V );

    SC_METHOD(thread_add_ln700_fu_651_p2);
    sensitive << ( wrptr_V );

    SC_METHOD(thread_add_ln701_fu_730_p2);
    sensitive << ( ap_phi_mux_t_V_3_phi_fu_263_p4 );

    SC_METHOD(thread_and_ln791_1_fu_532_p2);
    sensitive << ( icmp_ln879_3_reg_853 );
    sensitive << ( xor_ln791_fu_527_p2 );

    SC_METHOD(thread_and_ln791_2_fu_560_p2);
    sensitive << ( icmp_ln791_reg_874 );
    sensitive << ( icmp_ln791_1_reg_880 );

    SC_METHOD(thread_and_ln791_3_fu_590_p2);
    sensitive << ( lastvalid_read_reg_800 );
    sensitive << ( xor_ln791_1_fu_555_p2 );

    SC_METHOD(thread_and_ln791_4_fu_595_p2);
    sensitive << ( icmp_ln879_reg_824 );
    sensitive << ( icmp_ln791_reg_874 );

    SC_METHOD(thread_and_ln791_5_fu_599_p2);
    sensitive << ( and_ln791_4_fu_595_p2 );
    sensitive << ( and_ln791_3_fu_590_p2 );

    SC_METHOD(thread_and_ln791_fu_405_p2);
    sensitive << ( eventstart_read_reg_811 );
    sensitive << ( icmp_ln879_reg_824 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_idle_pp0_0to2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_p_0202_phi_fu_330_p4);
    sensitive << ( icmp_ln895_reg_893 );
    sensitive << ( ap_phi_reg_pp0_iter3_p_0202_reg_327 );
    sensitive << ( p_Result_2_fu_749_p1 );

    SC_METHOD(thread_ap_phi_mux_ptrsep_V_flag_1_phi_fu_287_p4);
    sensitive << ( icmp_ln895_reg_893 );
    sensitive << ( icmp_ln879_1_reg_923 );
    sensitive << ( ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_270 );
    sensitive << ( ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_283 );

    SC_METHOD(thread_ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4);
    sensitive << ( icmp_ln895_reg_893 );
    sensitive << ( ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_270 );
    sensitive << ( ap_phi_mux_ptrsep_V_flag_1_phi_fu_287_p4 );
    sensitive << ( ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_305 );

    SC_METHOD(thread_ap_phi_mux_ptrsep_V_new_1_phi_fu_298_p4);
    sensitive << ( t_V_3_reg_260 );
    sensitive << ( icmp_ln895_reg_893 );
    sensitive << ( icmp_ln879_1_reg_923 );
    sensitive << ( ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_295 );

    SC_METHOD(thread_ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4);
    sensitive << ( icmp_ln895_reg_893 );
    sensitive << ( ap_phi_mux_ptrsep_V_new_1_phi_fu_298_p4 );
    sensitive << ( ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_316 );

    SC_METHOD(thread_ap_phi_mux_t_V_3_phi_fu_263_p4);
    sensitive << ( or_ln27_reg_885 );
    sensitive << ( add_ln700_1_fu_683_p2 );
    sensitive << ( ap_phi_reg_pp0_iter2_t_V_3_reg_260 );
    sensitive << ( ap_sig_allocacmp_t_V_1 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_270);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_283);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_295);

    SC_METHOD(thread_ap_phi_reg_pp0_iter2_t_V_3_reg_260);

    SC_METHOD(thread_ap_phi_reg_pp0_iter3_p_0202_reg_327);

    SC_METHOD(thread_ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_305);

    SC_METHOD(thread_ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_316);

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_p_0202_phi_fu_330_p4 );

    SC_METHOD(thread_ap_sig_allocacmp_readidx_V_load);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( readidx_V );
    sensitive << ( icmp_ln895_reg_893 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( add_ln214_fu_783_p2 );

    SC_METHOD(thread_ap_sig_allocacmp_t_V_1);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ptrsep_V );
    sensitive << ( ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4 );
    sensitive << ( ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_brams_V_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln544_fu_643_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_brams_V_0_address1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln544_1_fu_700_p1 );

    SC_METHOD(thread_brams_V_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_0_ce1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_0_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( lastvalid_read_reg_800 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sel_tmp_fu_621_p5 );
    sensitive << ( storemerge1_fu_416_p5 );

    SC_METHOD(thread_brams_V_0_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_ln27_fu_389_p2 );

    SC_METHOD(thread_brams_V_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln544_fu_643_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_brams_V_1_address1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln544_1_fu_700_p1 );

    SC_METHOD(thread_brams_V_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_1_ce1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_1_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( lastvalid_read_reg_800 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( select_ln791_fu_605_p3 );
    sensitive << ( p_Result_3_1_fu_446_p5 );

    SC_METHOD(thread_brams_V_1_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_ln27_fu_389_p2 );

    SC_METHOD(thread_brams_V_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln544_fu_643_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_brams_V_2_address1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln544_1_fu_700_p1 );

    SC_METHOD(thread_brams_V_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_2_ce1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_2_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( lastvalid_read_reg_800 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( prep_V_load_s_fu_537_p5 );
    sensitive << ( p_Result_3_2_fu_476_p5 );

    SC_METHOD(thread_brams_V_2_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_ln27_fu_389_p2 );

    SC_METHOD(thread_brams_V_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln544_fu_643_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_brams_V_3_address1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln544_1_fu_700_p1 );

    SC_METHOD(thread_brams_V_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_3_ce1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_brams_V_3_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( lastvalid_read_reg_800 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( storemerge_fu_518_p5 );
    sensitive << ( p_Result_3_3_fu_506_p5 );

    SC_METHOD(thread_brams_V_3_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_ln27_fu_389_p2 );

    SC_METHOD(thread_candout_V);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln895_reg_893 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( p_Val2_s_fu_736_p6 );

    SC_METHOD(thread_candout_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln895_reg_893 );

    SC_METHOD(thread_first);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln895_reg_893 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( p_Val2_s_fu_736_p6 );

    SC_METHOD(thread_first_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln895_reg_893 );

    SC_METHOD(thread_icmp_ln791_1_fu_379_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_ln791_1_fu_373_p2 );

    SC_METHOD(thread_icmp_ln791_fu_367_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_ln791_fu_361_p2 );

    SC_METHOD(thread_icmp_ln879_1_fu_712_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln895_fu_690_p2 );
    sensitive << ( ap_sig_allocacmp_readidx_V_load );

    SC_METHOD(thread_icmp_ln879_2_fu_343_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( candin_1_V );

    SC_METHOD(thread_icmp_ln879_3_fu_349_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( candin_2_V );

    SC_METHOD(thread_icmp_ln879_4_fu_355_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( candin_3_V );

    SC_METHOD(thread_icmp_ln879_fu_337_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( candin_0_V );

    SC_METHOD(thread_icmp_ln895_fu_690_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_t_V_3_phi_fu_263_p4 );

    SC_METHOD(thread_last);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln895_reg_893 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( p_Val2_s_fu_736_p6 );

    SC_METHOD(thread_last_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln895_reg_893 );

    SC_METHOD(thread_or_ln27_fu_389_p2);
    sensitive << ( write_r );
    sensitive << ( eventstart_read_reg_811 );

    SC_METHOD(thread_or_ln54_fu_663_p2);
    sensitive << ( lastvalid_read_reg_800 );
    sensitive << ( eventstart_read_reg_811 );

    SC_METHOD(thread_or_ln791_1_fu_373_p2);
    sensitive << ( candin_0_V );
    sensitive << ( candin_1_V );

    SC_METHOD(thread_or_ln791_fu_361_p2);
    sensitive << ( candin_2_V );
    sensitive << ( candin_3_V );

    SC_METHOD(thread_p_Result_18_1_fu_428_p5);
    sensitive << ( candin_1_V_read_reg_832 );

    SC_METHOD(thread_p_Result_18_2_fu_458_p5);
    sensitive << ( candin_2_V_read_reg_847 );

    SC_METHOD(thread_p_Result_18_3_fu_488_p5);
    sensitive << ( candin_3_V_read_reg_860 );

    SC_METHOD(thread_p_Result_2_fu_749_p1);
    sensitive << ( p_Val2_s_fu_736_p6 );

    SC_METHOD(thread_p_Result_3_1_fu_446_p5);
    sensitive << ( p_Result_18_1_fu_428_p5 );
    sensitive << ( tmp_2_fu_439_p3 );

    SC_METHOD(thread_p_Result_3_2_fu_476_p5);
    sensitive << ( p_Result_18_2_fu_458_p5 );
    sensitive << ( tmp_3_fu_469_p3 );

    SC_METHOD(thread_p_Result_3_3_fu_506_p5);
    sensitive << ( p_Result_18_3_fu_488_p5 );
    sensitive << ( tmp_4_fu_499_p3 );

    SC_METHOD(thread_p_Result_6_2_c_fu_547_p4);
    sensitive << ( candin_1_V_read_reg_832 );
    sensitive << ( icmp_ln879_2_reg_839 );

    SC_METHOD(thread_p_Result_s_fu_394_p5);
    sensitive << ( candin_0_V_read_reg_818 );

    SC_METHOD(thread_prep_V_load_4_fu_564_p5);
    sensitive << ( candin_1_V_read_reg_832 );
    sensitive << ( icmp_ln879_2_reg_839 );
    sensitive << ( and_ln791_2_fu_560_p2 );

    SC_METHOD(thread_prep_V_load_s_fu_537_p5);
    sensitive << ( candin_2_V_read_reg_847 );
    sensitive << ( icmp_ln879_3_reg_853 );
    sensitive << ( and_ln791_1_fu_532_p2 );

    SC_METHOD(thread_sel_tmp_fu_621_p5);
    sensitive << ( candin_0_V_read_reg_818 );
    sensitive << ( icmp_ln879_reg_824 );
    sensitive << ( and_ln791_fu_405_p2 );
    sensitive << ( and_ln791_5_fu_599_p2 );

    SC_METHOD(thread_select_ln791_fu_605_p3);
    sensitive << ( and_ln791_5_fu_599_p2 );
    sensitive << ( p_Result_6_2_c_fu_547_p4 );
    sensitive << ( prep_V_load_4_fu_564_p5 );

    SC_METHOD(thread_storemerge1_fu_416_p5);
    sensitive << ( p_Result_s_fu_394_p5 );
    sensitive << ( tmp_1_fu_409_p3 );

    SC_METHOD(thread_storemerge_fu_518_p5);
    sensitive << ( candin_3_V_read_reg_860 );
    sensitive << ( icmp_ln879_4_reg_866 );

    SC_METHOD(thread_tmp_1_fu_409_p3);
    sensitive << ( icmp_ln879_reg_824 );
    sensitive << ( and_ln791_fu_405_p2 );

    SC_METHOD(thread_tmp_2_fu_439_p3);
    sensitive << ( icmp_ln879_2_reg_839 );

    SC_METHOD(thread_tmp_3_fu_469_p3);
    sensitive << ( icmp_ln879_3_reg_853 );

    SC_METHOD(thread_tmp_4_fu_499_p3);
    sensitive << ( icmp_ln879_4_reg_866 );

    SC_METHOD(thread_xor_ln54_fu_667_p2);
    sensitive << ( lastvalid_read_reg_800 );

    SC_METHOD(thread_xor_ln791_1_fu_555_p2);
    sensitive << ( icmp_ln879_2_reg_839 );

    SC_METHOD(thread_xor_ln791_fu_527_p2);
    sensitive << ( icmp_ln879_4_reg_866 );

    SC_METHOD(thread_zext_ln544_1_fu_700_p1);
    sensitive << ( rdptr_V );

    SC_METHOD(thread_zext_ln544_fu_643_p1);
    sensitive << ( wrptr_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    write_r = "0";
    ptrsep_V = "000000000";
    wrptr_V = "000000000";
    rdptr_V = "000000000";
    readidx_V = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "streamv_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, candin_0_V, "(port)candin_0_V");
    sc_trace(mVcdFile, candin_1_V, "(port)candin_1_V");
    sc_trace(mVcdFile, candin_2_V, "(port)candin_2_V");
    sc_trace(mVcdFile, candin_3_V, "(port)candin_3_V");
    sc_trace(mVcdFile, candout_V, "(port)candout_V");
    sc_trace(mVcdFile, candout_V_ap_vld, "(port)candout_V_ap_vld");
    sc_trace(mVcdFile, eventstart, "(port)eventstart");
    sc_trace(mVcdFile, lastvalid, "(port)lastvalid");
    sc_trace(mVcdFile, first, "(port)first");
    sc_trace(mVcdFile, first_ap_vld, "(port)first_ap_vld");
    sc_trace(mVcdFile, last, "(port)last");
    sc_trace(mVcdFile, last_ap_vld, "(port)last_ap_vld");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, write_r, "write_r");
    sc_trace(mVcdFile, ptrsep_V, "ptrsep_V");
    sc_trace(mVcdFile, wrptr_V, "wrptr_V");
    sc_trace(mVcdFile, brams_V_0_address0, "brams_V_0_address0");
    sc_trace(mVcdFile, brams_V_0_ce0, "brams_V_0_ce0");
    sc_trace(mVcdFile, brams_V_0_we0, "brams_V_0_we0");
    sc_trace(mVcdFile, brams_V_0_d0, "brams_V_0_d0");
    sc_trace(mVcdFile, brams_V_0_address1, "brams_V_0_address1");
    sc_trace(mVcdFile, brams_V_0_ce1, "brams_V_0_ce1");
    sc_trace(mVcdFile, brams_V_0_q1, "brams_V_0_q1");
    sc_trace(mVcdFile, brams_V_1_address0, "brams_V_1_address0");
    sc_trace(mVcdFile, brams_V_1_ce0, "brams_V_1_ce0");
    sc_trace(mVcdFile, brams_V_1_we0, "brams_V_1_we0");
    sc_trace(mVcdFile, brams_V_1_d0, "brams_V_1_d0");
    sc_trace(mVcdFile, brams_V_1_address1, "brams_V_1_address1");
    sc_trace(mVcdFile, brams_V_1_ce1, "brams_V_1_ce1");
    sc_trace(mVcdFile, brams_V_1_q1, "brams_V_1_q1");
    sc_trace(mVcdFile, brams_V_2_address0, "brams_V_2_address0");
    sc_trace(mVcdFile, brams_V_2_ce0, "brams_V_2_ce0");
    sc_trace(mVcdFile, brams_V_2_we0, "brams_V_2_we0");
    sc_trace(mVcdFile, brams_V_2_d0, "brams_V_2_d0");
    sc_trace(mVcdFile, brams_V_2_address1, "brams_V_2_address1");
    sc_trace(mVcdFile, brams_V_2_ce1, "brams_V_2_ce1");
    sc_trace(mVcdFile, brams_V_2_q1, "brams_V_2_q1");
    sc_trace(mVcdFile, brams_V_3_address0, "brams_V_3_address0");
    sc_trace(mVcdFile, brams_V_3_ce0, "brams_V_3_ce0");
    sc_trace(mVcdFile, brams_V_3_we0, "brams_V_3_we0");
    sc_trace(mVcdFile, brams_V_3_d0, "brams_V_3_d0");
    sc_trace(mVcdFile, brams_V_3_address1, "brams_V_3_address1");
    sc_trace(mVcdFile, brams_V_3_ce1, "brams_V_3_ce1");
    sc_trace(mVcdFile, brams_V_3_q1, "brams_V_3_q1");
    sc_trace(mVcdFile, rdptr_V, "rdptr_V");
    sc_trace(mVcdFile, readidx_V, "readidx_V");
    sc_trace(mVcdFile, t_V_3_reg_260, "t_V_3_reg_260");
    sc_trace(mVcdFile, lastvalid_read_reg_800, "lastvalid_read_reg_800");
    sc_trace(mVcdFile, eventstart_read_reg_811, "eventstart_read_reg_811");
    sc_trace(mVcdFile, candin_0_V_read_reg_818, "candin_0_V_read_reg_818");
    sc_trace(mVcdFile, icmp_ln879_fu_337_p2, "icmp_ln879_fu_337_p2");
    sc_trace(mVcdFile, icmp_ln879_reg_824, "icmp_ln879_reg_824");
    sc_trace(mVcdFile, candin_1_V_read_reg_832, "candin_1_V_read_reg_832");
    sc_trace(mVcdFile, icmp_ln879_2_fu_343_p2, "icmp_ln879_2_fu_343_p2");
    sc_trace(mVcdFile, icmp_ln879_2_reg_839, "icmp_ln879_2_reg_839");
    sc_trace(mVcdFile, candin_2_V_read_reg_847, "candin_2_V_read_reg_847");
    sc_trace(mVcdFile, icmp_ln879_3_fu_349_p2, "icmp_ln879_3_fu_349_p2");
    sc_trace(mVcdFile, icmp_ln879_3_reg_853, "icmp_ln879_3_reg_853");
    sc_trace(mVcdFile, candin_3_V_read_reg_860, "candin_3_V_read_reg_860");
    sc_trace(mVcdFile, icmp_ln879_4_fu_355_p2, "icmp_ln879_4_fu_355_p2");
    sc_trace(mVcdFile, icmp_ln879_4_reg_866, "icmp_ln879_4_reg_866");
    sc_trace(mVcdFile, icmp_ln791_fu_367_p2, "icmp_ln791_fu_367_p2");
    sc_trace(mVcdFile, icmp_ln791_reg_874, "icmp_ln791_reg_874");
    sc_trace(mVcdFile, icmp_ln791_1_fu_379_p2, "icmp_ln791_1_fu_379_p2");
    sc_trace(mVcdFile, icmp_ln791_1_reg_880, "icmp_ln791_1_reg_880");
    sc_trace(mVcdFile, or_ln27_fu_389_p2, "or_ln27_fu_389_p2");
    sc_trace(mVcdFile, or_ln27_reg_885, "or_ln27_reg_885");
    sc_trace(mVcdFile, or_ln54_fu_663_p2, "or_ln54_fu_663_p2");
    sc_trace(mVcdFile, icmp_ln895_fu_690_p2, "icmp_ln895_fu_690_p2");
    sc_trace(mVcdFile, icmp_ln895_reg_893, "icmp_ln895_reg_893");
    sc_trace(mVcdFile, readidx_V_load_reg_897, "readidx_V_load_reg_897");
    sc_trace(mVcdFile, icmp_ln879_1_fu_712_p2, "icmp_ln879_1_fu_712_p2");
    sc_trace(mVcdFile, icmp_ln879_1_reg_923, "icmp_ln879_1_reg_923");
    sc_trace(mVcdFile, add_ln701_fu_730_p2, "add_ln701_fu_730_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_t_V_3_phi_fu_263_p4, "ap_phi_mux_t_V_3_phi_fu_263_p4");
    sc_trace(mVcdFile, add_ln700_1_fu_683_p2, "add_ln700_1_fu_683_p2");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_t_V_3_reg_260, "ap_phi_reg_pp0_iter2_t_V_3_reg_260");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_270, "ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_270");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_270, "ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_270");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_ptrsep_V_flag_0_reg_270, "ap_phi_reg_pp0_iter2_ptrsep_V_flag_0_reg_270");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_270, "ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_270");
    sc_trace(mVcdFile, ap_phi_mux_ptrsep_V_flag_1_phi_fu_287_p4, "ap_phi_mux_ptrsep_V_flag_1_phi_fu_287_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_283, "ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_283");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_283, "ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_283");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_ptrsep_V_flag_1_reg_283, "ap_phi_reg_pp0_iter2_ptrsep_V_flag_1_reg_283");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_283, "ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_283");
    sc_trace(mVcdFile, ap_phi_mux_ptrsep_V_new_1_phi_fu_298_p4, "ap_phi_mux_ptrsep_V_new_1_phi_fu_298_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_295, "ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_295");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_295, "ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_295");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_ptrsep_V_new_1_reg_295, "ap_phi_reg_pp0_iter2_ptrsep_V_new_1_reg_295");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_295, "ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_295");
    sc_trace(mVcdFile, ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4, "ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_305, "ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_305");
    sc_trace(mVcdFile, ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4, "ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_316, "ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_316");
    sc_trace(mVcdFile, ap_phi_mux_p_0202_phi_fu_330_p4, "ap_phi_mux_p_0202_phi_fu_330_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_p_0202_reg_327, "ap_phi_reg_pp0_iter3_p_0202_reg_327");
    sc_trace(mVcdFile, p_Result_2_fu_749_p1, "p_Result_2_fu_749_p1");
    sc_trace(mVcdFile, zext_ln544_fu_643_p1, "zext_ln544_fu_643_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln544_1_fu_700_p1, "zext_ln544_1_fu_700_p1");
    sc_trace(mVcdFile, xor_ln54_fu_667_p2, "xor_ln54_fu_667_p2");
    sc_trace(mVcdFile, ap_sig_allocacmp_t_V_1, "ap_sig_allocacmp_t_V_1");
    sc_trace(mVcdFile, add_ln700_fu_651_p2, "add_ln700_fu_651_p2");
    sc_trace(mVcdFile, add_ln700_2_fu_718_p2, "add_ln700_2_fu_718_p2");
    sc_trace(mVcdFile, add_ln214_fu_783_p2, "add_ln214_fu_783_p2");
    sc_trace(mVcdFile, ap_sig_allocacmp_readidx_V_load, "ap_sig_allocacmp_readidx_V_load");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, or_ln791_fu_361_p2, "or_ln791_fu_361_p2");
    sc_trace(mVcdFile, or_ln791_1_fu_373_p2, "or_ln791_1_fu_373_p2");
    sc_trace(mVcdFile, and_ln791_fu_405_p2, "and_ln791_fu_405_p2");
    sc_trace(mVcdFile, p_Result_s_fu_394_p5, "p_Result_s_fu_394_p5");
    sc_trace(mVcdFile, tmp_1_fu_409_p3, "tmp_1_fu_409_p3");
    sc_trace(mVcdFile, p_Result_18_1_fu_428_p5, "p_Result_18_1_fu_428_p5");
    sc_trace(mVcdFile, tmp_2_fu_439_p3, "tmp_2_fu_439_p3");
    sc_trace(mVcdFile, p_Result_18_2_fu_458_p5, "p_Result_18_2_fu_458_p5");
    sc_trace(mVcdFile, tmp_3_fu_469_p3, "tmp_3_fu_469_p3");
    sc_trace(mVcdFile, p_Result_18_3_fu_488_p5, "p_Result_18_3_fu_488_p5");
    sc_trace(mVcdFile, tmp_4_fu_499_p3, "tmp_4_fu_499_p3");
    sc_trace(mVcdFile, xor_ln791_fu_527_p2, "xor_ln791_fu_527_p2");
    sc_trace(mVcdFile, and_ln791_1_fu_532_p2, "and_ln791_1_fu_532_p2");
    sc_trace(mVcdFile, and_ln791_2_fu_560_p2, "and_ln791_2_fu_560_p2");
    sc_trace(mVcdFile, storemerge_fu_518_p5, "storemerge_fu_518_p5");
    sc_trace(mVcdFile, p_Result_3_3_fu_506_p5, "p_Result_3_3_fu_506_p5");
    sc_trace(mVcdFile, prep_V_load_s_fu_537_p5, "prep_V_load_s_fu_537_p5");
    sc_trace(mVcdFile, p_Result_3_2_fu_476_p5, "p_Result_3_2_fu_476_p5");
    sc_trace(mVcdFile, xor_ln791_1_fu_555_p2, "xor_ln791_1_fu_555_p2");
    sc_trace(mVcdFile, and_ln791_4_fu_595_p2, "and_ln791_4_fu_595_p2");
    sc_trace(mVcdFile, and_ln791_3_fu_590_p2, "and_ln791_3_fu_590_p2");
    sc_trace(mVcdFile, and_ln791_5_fu_599_p2, "and_ln791_5_fu_599_p2");
    sc_trace(mVcdFile, p_Result_6_2_c_fu_547_p4, "p_Result_6_2_c_fu_547_p4");
    sc_trace(mVcdFile, prep_V_load_4_fu_564_p5, "prep_V_load_4_fu_564_p5");
    sc_trace(mVcdFile, select_ln791_fu_605_p3, "select_ln791_fu_605_p3");
    sc_trace(mVcdFile, p_Result_3_1_fu_446_p5, "p_Result_3_1_fu_446_p5");
    sc_trace(mVcdFile, sel_tmp_fu_621_p5, "sel_tmp_fu_621_p5");
    sc_trace(mVcdFile, storemerge1_fu_416_p5, "storemerge1_fu_416_p5");
    sc_trace(mVcdFile, p_Val2_s_fu_736_p6, "p_Val2_s_fu_736_p6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to2, "ap_idle_pp0_0to2");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("streamv.hdltvin.dat");
    mHdltvoutHandle.open("streamv.hdltvout.dat");
}

streamv::~streamv() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete brams_V_0_U;
    delete brams_V_1_U;
    delete brams_V_2_U;
    delete brams_V_3_U;
    delete streamv_mux_42_67bkb_U1;
}

void streamv::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln27_reg_885.read())) {
            ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_270 = ap_const_lv1_0;
        } else if (esl_seteq<1,1,1>(or_ln27_reg_885.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_270 = ap_const_lv1_1;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_270 = ap_phi_reg_pp0_iter2_ptrsep_V_flag_0_reg_270.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_fu_690_p2.read()) && 
             esl_seteq<1,1,1>(icmp_ln879_1_fu_712_p2.read(), ap_const_lv1_1))) {
            ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_283 = ap_const_lv1_1;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_283 = ap_phi_reg_pp0_iter2_ptrsep_V_flag_1_reg_283.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_fu_690_p2.read()) && 
             esl_seteq<1,1,1>(icmp_ln879_1_fu_712_p2.read(), ap_const_lv1_1))) {
            ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_295 = add_ln701_fu_730_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_295 = ap_phi_reg_pp0_iter2_ptrsep_V_new_1_reg_295.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln27_reg_885.read())) {
            t_V_3_reg_260 = ap_sig_allocacmp_t_V_1.read();
        } else if (esl_seteq<1,1,1>(or_ln27_reg_885.read(), ap_const_lv1_1)) {
            t_V_3_reg_260 = add_ln700_1_fu_683_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            t_V_3_reg_260 = ap_phi_reg_pp0_iter2_t_V_3_reg_260.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_270 = ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_270.read();
        ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_283 = ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_283.read();
        ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_295 = ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_295.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_reg_pp0_iter2_ptrsep_V_flag_0_reg_270 = ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_270.read();
        ap_phi_reg_pp0_iter2_ptrsep_V_flag_1_reg_283 = ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_283.read();
        ap_phi_reg_pp0_iter2_ptrsep_V_new_1_reg_295 = ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_295.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        candin_0_V_read_reg_818 = candin_0_V.read();
        candin_1_V_read_reg_832 = candin_1_V.read();
        candin_2_V_read_reg_847 = candin_2_V.read();
        candin_3_V_read_reg_860 = candin_3_V.read();
        eventstart_read_reg_811 =  (sc_lv<1>) (eventstart.read());
        icmp_ln791_1_reg_880 = icmp_ln791_1_fu_379_p2.read();
        icmp_ln791_reg_874 = icmp_ln791_fu_367_p2.read();
        icmp_ln879_2_reg_839 = icmp_ln879_2_fu_343_p2.read();
        icmp_ln879_3_reg_853 = icmp_ln879_3_fu_349_p2.read();
        icmp_ln879_4_reg_866 = icmp_ln879_4_fu_355_p2.read();
        icmp_ln879_reg_824 = icmp_ln879_fu_337_p2.read();
        lastvalid_read_reg_800 =  (sc_lv<1>) (lastvalid.read());
        or_ln27_reg_885 = or_ln27_fu_389_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_fu_690_p2.read()))) {
        icmp_ln879_1_reg_923 = icmp_ln879_1_fu_712_p2.read();
        readidx_V_load_reg_897 = ap_sig_allocacmp_readidx_V_load.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln895_reg_893 = icmp_ln895_fu_690_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4.read()))) {
        ptrsep_V = ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_fu_690_p2.read()) && esl_seteq<1,1,1>(icmp_ln879_1_fu_712_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        rdptr_V = add_ln700_2_fu_718_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read()))) {
        readidx_V = add_ln214_fu_783_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(or_ln54_fu_663_p2.read(), ap_const_lv1_1))) {
        write_r = xor_ln54_fu_667_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(or_ln27_fu_389_p2.read(), ap_const_lv1_1))) {
        wrptr_V = add_ln700_fu_651_p2.read();
    }
}

void streamv::thread_add_ln214_fu_783_p2() {
    add_ln214_fu_783_p2 = (!readidx_V_load_reg_897.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(readidx_V_load_reg_897.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void streamv::thread_add_ln700_1_fu_683_p2() {
    add_ln700_1_fu_683_p2 = (!ap_sig_allocacmp_t_V_1.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ap_sig_allocacmp_t_V_1.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void streamv::thread_add_ln700_2_fu_718_p2() {
    add_ln700_2_fu_718_p2 = (!rdptr_V.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(rdptr_V.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void streamv::thread_add_ln700_fu_651_p2() {
    add_ln700_fu_651_p2 = (!wrptr_V.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(wrptr_V.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void streamv::thread_add_ln701_fu_730_p2() {
    add_ln701_fu_730_p2 = (!ap_phi_mux_t_V_3_phi_fu_263_p4.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(ap_phi_mux_t_V_3_phi_fu_263_p4.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void streamv::thread_and_ln791_1_fu_532_p2() {
    and_ln791_1_fu_532_p2 = (icmp_ln879_3_reg_853.read() & xor_ln791_fu_527_p2.read());
}

void streamv::thread_and_ln791_2_fu_560_p2() {
    and_ln791_2_fu_560_p2 = (icmp_ln791_1_reg_880.read() & icmp_ln791_reg_874.read());
}

void streamv::thread_and_ln791_3_fu_590_p2() {
    and_ln791_3_fu_590_p2 = (lastvalid_read_reg_800.read() & xor_ln791_1_fu_555_p2.read());
}

void streamv::thread_and_ln791_4_fu_595_p2() {
    and_ln791_4_fu_595_p2 = (icmp_ln879_reg_824.read() & icmp_ln791_reg_874.read());
}

void streamv::thread_and_ln791_5_fu_599_p2() {
    and_ln791_5_fu_599_p2 = (and_ln791_4_fu_595_p2.read() & and_ln791_3_fu_590_p2.read());
}

void streamv::thread_and_ln791_fu_405_p2() {
    and_ln791_fu_405_p2 = (icmp_ln879_reg_824.read() & eventstart_read_reg_811.read());
}

void streamv::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void streamv::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void streamv::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void streamv::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void streamv::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void streamv::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read());
}

void streamv::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void streamv::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void streamv::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void streamv::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void streamv::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void streamv::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void streamv::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void streamv::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void streamv::thread_ap_idle_pp0_0to2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0_0to2 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to2 = ap_const_logic_0;
    }
}

void streamv::thread_ap_phi_mux_p_0202_phi_fu_330_p4() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read())) {
        ap_phi_mux_p_0202_phi_fu_330_p4 = p_Result_2_fu_749_p1.read();
    } else if (esl_seteq<1,1,1>(icmp_ln895_reg_893.read(), ap_const_lv1_1)) {
        ap_phi_mux_p_0202_phi_fu_330_p4 = ap_const_lv1_0;
    } else {
        ap_phi_mux_p_0202_phi_fu_330_p4 = ap_phi_reg_pp0_iter3_p_0202_reg_327.read();
    }
}

void streamv::thread_ap_phi_mux_ptrsep_V_flag_1_phi_fu_287_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_1_reg_923.read()))) {
        ap_phi_mux_ptrsep_V_flag_1_phi_fu_287_p4 = ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_270.read();
    } else {
        ap_phi_mux_ptrsep_V_flag_1_phi_fu_287_p4 = ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_283.read();
    }
}

void streamv::thread_ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read())) {
        ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4 = ap_phi_mux_ptrsep_V_flag_1_phi_fu_287_p4.read();
    } else if (esl_seteq<1,1,1>(icmp_ln895_reg_893.read(), ap_const_lv1_1)) {
        ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4 = ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_270.read();
    } else {
        ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4 = ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_305.read();
    }
}

void streamv::thread_ap_phi_mux_ptrsep_V_new_1_phi_fu_298_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_1_reg_923.read()))) {
        ap_phi_mux_ptrsep_V_new_1_phi_fu_298_p4 = t_V_3_reg_260.read();
    } else {
        ap_phi_mux_ptrsep_V_new_1_phi_fu_298_p4 = ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_295.read();
    }
}

void streamv::thread_ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read())) {
        ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4 = ap_phi_mux_ptrsep_V_new_1_phi_fu_298_p4.read();
    } else if (esl_seteq<1,1,1>(icmp_ln895_reg_893.read(), ap_const_lv1_1)) {
        ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4 = ap_const_lv9_0;
    } else {
        ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4 = ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_316.read();
    }
}

void streamv::thread_ap_phi_mux_t_V_3_phi_fu_263_p4() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln27_reg_885.read())) {
        ap_phi_mux_t_V_3_phi_fu_263_p4 = ap_sig_allocacmp_t_V_1.read();
    } else if (esl_seteq<1,1,1>(or_ln27_reg_885.read(), ap_const_lv1_1)) {
        ap_phi_mux_t_V_3_phi_fu_263_p4 = add_ln700_1_fu_683_p2.read();
    } else {
        ap_phi_mux_t_V_3_phi_fu_263_p4 = ap_phi_reg_pp0_iter2_t_V_3_reg_260.read();
    }
}

void streamv::thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_270() {
    ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_270 =  (sc_lv<1>) ("X");
}

void streamv::thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_283() {
    ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_283 =  (sc_lv<1>) ("X");
}

void streamv::thread_ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_295() {
    ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_295 =  (sc_lv<9>) ("XXXXXXXXX");
}

void streamv::thread_ap_phi_reg_pp0_iter2_t_V_3_reg_260() {
    ap_phi_reg_pp0_iter2_t_V_3_reg_260 =  (sc_lv<9>) ("XXXXXXXXX");
}

void streamv::thread_ap_phi_reg_pp0_iter3_p_0202_reg_327() {
    ap_phi_reg_pp0_iter3_p_0202_reg_327 =  (sc_lv<1>) ("X");
}

void streamv::thread_ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_305() {
    ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_305 =  (sc_lv<1>) ("X");
}

void streamv::thread_ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_316() {
    ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_316 =  (sc_lv<9>) ("XXXXXXXXX");
}

void streamv::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void streamv::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to2.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void streamv::thread_ap_return() {
    ap_return = ap_phi_mux_p_0202_phi_fu_330_p4.read();
}

void streamv::thread_ap_sig_allocacmp_readidx_V_load() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_sig_allocacmp_readidx_V_load = add_ln214_fu_783_p2.read();
    } else {
        ap_sig_allocacmp_readidx_V_load = readidx_V.read();
    }
}

void streamv::thread_ap_sig_allocacmp_t_V_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4.read()))) {
        ap_sig_allocacmp_t_V_1 = ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4.read();
    } else {
        ap_sig_allocacmp_t_V_1 = ptrsep_V.read();
    }
}

void streamv::thread_brams_V_0_address0() {
    brams_V_0_address0 =  (sc_lv<9>) (zext_ln544_fu_643_p1.read());
}

void streamv::thread_brams_V_0_address1() {
    brams_V_0_address1 =  (sc_lv<9>) (zext_ln544_1_fu_700_p1.read());
}

void streamv::thread_brams_V_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        brams_V_0_ce0 = ap_const_logic_1;
    } else {
        brams_V_0_ce0 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        brams_V_0_ce1 = ap_const_logic_1;
    } else {
        brams_V_0_ce1 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_0_d0() {
    brams_V_0_d0 = (!lastvalid_read_reg_800.read()[0].is_01())? sc_lv<67>(): ((lastvalid_read_reg_800.read()[0].to_bool())? sel_tmp_fu_621_p5.read(): storemerge1_fu_416_p5.read());
}

void streamv::thread_brams_V_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_ln27_fu_389_p2.read(), ap_const_lv1_1))) {
        brams_V_0_we0 = ap_const_logic_1;
    } else {
        brams_V_0_we0 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_1_address0() {
    brams_V_1_address0 =  (sc_lv<9>) (zext_ln544_fu_643_p1.read());
}

void streamv::thread_brams_V_1_address1() {
    brams_V_1_address1 =  (sc_lv<9>) (zext_ln544_1_fu_700_p1.read());
}

void streamv::thread_brams_V_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        brams_V_1_ce0 = ap_const_logic_1;
    } else {
        brams_V_1_ce0 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        brams_V_1_ce1 = ap_const_logic_1;
    } else {
        brams_V_1_ce1 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_1_d0() {
    brams_V_1_d0 = (!lastvalid_read_reg_800.read()[0].is_01())? sc_lv<67>(): ((lastvalid_read_reg_800.read()[0].to_bool())? select_ln791_fu_605_p3.read(): p_Result_3_1_fu_446_p5.read());
}

void streamv::thread_brams_V_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_ln27_fu_389_p2.read(), ap_const_lv1_1))) {
        brams_V_1_we0 = ap_const_logic_1;
    } else {
        brams_V_1_we0 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_2_address0() {
    brams_V_2_address0 =  (sc_lv<9>) (zext_ln544_fu_643_p1.read());
}

void streamv::thread_brams_V_2_address1() {
    brams_V_2_address1 =  (sc_lv<9>) (zext_ln544_1_fu_700_p1.read());
}

void streamv::thread_brams_V_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        brams_V_2_ce0 = ap_const_logic_1;
    } else {
        brams_V_2_ce0 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        brams_V_2_ce1 = ap_const_logic_1;
    } else {
        brams_V_2_ce1 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_2_d0() {
    brams_V_2_d0 = (!lastvalid_read_reg_800.read()[0].is_01())? sc_lv<67>(): ((lastvalid_read_reg_800.read()[0].to_bool())? prep_V_load_s_fu_537_p5.read(): p_Result_3_2_fu_476_p5.read());
}

void streamv::thread_brams_V_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_ln27_fu_389_p2.read(), ap_const_lv1_1))) {
        brams_V_2_we0 = ap_const_logic_1;
    } else {
        brams_V_2_we0 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_3_address0() {
    brams_V_3_address0 =  (sc_lv<9>) (zext_ln544_fu_643_p1.read());
}

void streamv::thread_brams_V_3_address1() {
    brams_V_3_address1 =  (sc_lv<9>) (zext_ln544_1_fu_700_p1.read());
}

void streamv::thread_brams_V_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        brams_V_3_ce0 = ap_const_logic_1;
    } else {
        brams_V_3_ce0 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_3_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        brams_V_3_ce1 = ap_const_logic_1;
    } else {
        brams_V_3_ce1 = ap_const_logic_0;
    }
}

void streamv::thread_brams_V_3_d0() {
    brams_V_3_d0 = (!lastvalid_read_reg_800.read()[0].is_01())? sc_lv<67>(): ((lastvalid_read_reg_800.read()[0].to_bool())? storemerge_fu_518_p5.read(): p_Result_3_3_fu_506_p5.read());
}

void streamv::thread_brams_V_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_ln27_fu_389_p2.read(), ap_const_lv1_1))) {
        brams_V_3_we0 = ap_const_logic_1;
    } else {
        brams_V_3_we0 = ap_const_logic_0;
    }
}

void streamv::thread_candout_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(icmp_ln895_reg_893.read(), ap_const_lv1_1)) {
            candout_V = ap_const_lv64_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read())) {
            candout_V = p_Val2_s_fu_736_p6.read().range(66, 3);
        } else {
            candout_V = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        candout_V = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void streamv::thread_candout_V_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(icmp_ln895_reg_893.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read())))) {
        candout_V_ap_vld = ap_const_logic_1;
    } else {
        candout_V_ap_vld = ap_const_logic_0;
    }
}

void streamv::thread_first() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(icmp_ln895_reg_893.read(), ap_const_lv1_1)) {
            first =  (sc_logic) (ap_const_lv1_0[0]);
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read())) {
            first =  (sc_logic) (p_Val2_s_fu_736_p6.read()[1]);
        } else {
            first = sc_logic('X');
        }
    } else {
        first = sc_logic('X');
    }
}

void streamv::thread_first_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(icmp_ln895_reg_893.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read())))) {
        first_ap_vld = ap_const_logic_1;
    } else {
        first_ap_vld = ap_const_logic_0;
    }
}

void streamv::thread_icmp_ln791_1_fu_379_p2() {
    icmp_ln791_1_fu_379_p2 = (!or_ln791_1_fu_373_p2.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(or_ln791_1_fu_373_p2.read() != ap_const_lv64_0);
}

void streamv::thread_icmp_ln791_fu_367_p2() {
    icmp_ln791_fu_367_p2 = (!or_ln791_fu_361_p2.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(or_ln791_fu_361_p2.read() == ap_const_lv64_0);
}

void streamv::thread_icmp_ln879_1_fu_712_p2() {
    icmp_ln879_1_fu_712_p2 = (!ap_sig_allocacmp_readidx_V_load.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ap_sig_allocacmp_readidx_V_load.read() == ap_const_lv2_3);
}

void streamv::thread_icmp_ln879_2_fu_343_p2() {
    icmp_ln879_2_fu_343_p2 = (!candin_1_V.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(candin_1_V.read() != ap_const_lv64_0);
}

void streamv::thread_icmp_ln879_3_fu_349_p2() {
    icmp_ln879_3_fu_349_p2 = (!candin_2_V.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(candin_2_V.read() != ap_const_lv64_0);
}

void streamv::thread_icmp_ln879_4_fu_355_p2() {
    icmp_ln879_4_fu_355_p2 = (!candin_3_V.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(candin_3_V.read() != ap_const_lv64_0);
}

void streamv::thread_icmp_ln879_fu_337_p2() {
    icmp_ln879_fu_337_p2 = (!candin_0_V.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(candin_0_V.read() != ap_const_lv64_0);
}

void streamv::thread_icmp_ln895_fu_690_p2() {
    icmp_ln895_fu_690_p2 = (!ap_phi_mux_t_V_3_phi_fu_263_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_t_V_3_phi_fu_263_p4.read() == ap_const_lv9_0);
}

void streamv::thread_last() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(icmp_ln895_reg_893.read(), ap_const_lv1_1)) {
            last =  (sc_logic) (ap_const_lv1_0[0]);
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read())) {
            last =  (sc_logic) (p_Val2_s_fu_736_p6.read()[2]);
        } else {
            last = sc_logic('X');
        }
    } else {
        last = sc_logic('X');
    }
}

void streamv::thread_last_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(icmp_ln895_reg_893.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_reg_893.read())))) {
        last_ap_vld = ap_const_logic_1;
    } else {
        last_ap_vld = ap_const_logic_0;
    }
}

void streamv::thread_or_ln27_fu_389_p2() {
    or_ln27_fu_389_p2 = (write_r.read() | eventstart_read_reg_811.read());
}

void streamv::thread_or_ln54_fu_663_p2() {
    or_ln54_fu_663_p2 = (lastvalid_read_reg_800.read() | eventstart_read_reg_811.read());
}

void streamv::thread_or_ln791_1_fu_373_p2() {
    or_ln791_1_fu_373_p2 = (candin_1_V.read() | candin_0_V.read());
}

void streamv::thread_or_ln791_fu_361_p2() {
    or_ln791_fu_361_p2 = (candin_3_V.read() | candin_2_V.read());
}

void streamv::thread_p_Result_18_1_fu_428_p5() {
    p_Result_18_1_fu_428_p5 = esl_partset<67,67,64,32,32>(ap_const_lv67_0, candin_1_V_read_reg_832.read(), ap_const_lv32_3, ap_const_lv32_42);
}

void streamv::thread_p_Result_18_2_fu_458_p5() {
    p_Result_18_2_fu_458_p5 = esl_partset<67,67,64,32,32>(ap_const_lv67_0, candin_2_V_read_reg_847.read(), ap_const_lv32_3, ap_const_lv32_42);
}

void streamv::thread_p_Result_18_3_fu_488_p5() {
    p_Result_18_3_fu_488_p5 = esl_partset<67,67,64,32,32>(ap_const_lv67_0, candin_3_V_read_reg_860.read(), ap_const_lv32_3, ap_const_lv32_42);
}

void streamv::thread_p_Result_2_fu_749_p1() {
    p_Result_2_fu_749_p1 = p_Val2_s_fu_736_p6.read().range(1-1, 0);
}

void streamv::thread_p_Result_3_1_fu_446_p5() {
    p_Result_3_1_fu_446_p5 = esl_partset<67,67,2,32,32>(p_Result_18_1_fu_428_p5.read(), tmp_2_fu_439_p3.read(), ap_const_lv32_0, ap_const_lv32_1);
}

void streamv::thread_p_Result_3_2_fu_476_p5() {
    p_Result_3_2_fu_476_p5 = esl_partset<67,67,2,32,32>(p_Result_18_2_fu_458_p5.read(), tmp_3_fu_469_p3.read(), ap_const_lv32_0, ap_const_lv32_1);
}

void streamv::thread_p_Result_3_3_fu_506_p5() {
    p_Result_3_3_fu_506_p5 = esl_partset<67,67,2,32,32>(p_Result_18_3_fu_488_p5.read(), tmp_4_fu_499_p3.read(), ap_const_lv32_0, ap_const_lv32_1);
}

void streamv::thread_p_Result_6_2_c_fu_547_p4() {
    p_Result_6_2_c_fu_547_p4 = esl_concat<66,1>(esl_concat<64,2>(candin_1_V_read_reg_832.read(), ap_const_lv2_0), icmp_ln879_2_reg_839.read());
}

void streamv::thread_p_Result_s_fu_394_p5() {
    p_Result_s_fu_394_p5 = esl_partset<67,67,64,32,32>(ap_const_lv67_0, candin_0_V_read_reg_818.read(), ap_const_lv32_3, ap_const_lv32_42);
}

void streamv::thread_prep_V_load_4_fu_564_p5() {
    prep_V_load_4_fu_564_p5 = esl_concat<66,1>(esl_concat<65,1>(esl_concat<64,1>(candin_1_V_read_reg_832.read(), and_ln791_2_fu_560_p2.read()), ap_const_lv1_0), icmp_ln879_2_reg_839.read());
}

void streamv::thread_prep_V_load_s_fu_537_p5() {
    prep_V_load_s_fu_537_p5 = esl_concat<66,1>(esl_concat<65,1>(esl_concat<64,1>(candin_2_V_read_reg_847.read(), and_ln791_1_fu_532_p2.read()), ap_const_lv1_0), icmp_ln879_3_reg_853.read());
}

void streamv::thread_sel_tmp_fu_621_p5() {
    sel_tmp_fu_621_p5 = esl_concat<66,1>(esl_concat<65,1>(esl_concat<64,1>(candin_0_V_read_reg_818.read(), and_ln791_5_fu_599_p2.read()), and_ln791_fu_405_p2.read()), icmp_ln879_reg_824.read());
}

void streamv::thread_select_ln791_fu_605_p3() {
    select_ln791_fu_605_p3 = (!and_ln791_5_fu_599_p2.read()[0].is_01())? sc_lv<67>(): ((and_ln791_5_fu_599_p2.read()[0].to_bool())? p_Result_6_2_c_fu_547_p4.read(): prep_V_load_4_fu_564_p5.read());
}

void streamv::thread_storemerge1_fu_416_p5() {
    storemerge1_fu_416_p5 = esl_partset<67,67,2,32,32>(p_Result_s_fu_394_p5.read(), tmp_1_fu_409_p3.read(), ap_const_lv32_0, ap_const_lv32_1);
}

void streamv::thread_storemerge_fu_518_p5() {
    storemerge_fu_518_p5 = esl_concat<66,1>(esl_concat<65,1>(esl_concat<64,1>(candin_3_V_read_reg_860.read(), icmp_ln879_4_reg_866.read()), ap_const_lv1_0), icmp_ln879_4_reg_866.read());
}

void streamv::thread_tmp_1_fu_409_p3() {
    tmp_1_fu_409_p3 = esl_concat<1,1>(and_ln791_fu_405_p2.read(), icmp_ln879_reg_824.read());
}

void streamv::thread_tmp_2_fu_439_p3() {
    tmp_2_fu_439_p3 = esl_concat<1,1>(ap_const_lv1_0, icmp_ln879_2_reg_839.read());
}

void streamv::thread_tmp_3_fu_469_p3() {
    tmp_3_fu_469_p3 = esl_concat<1,1>(ap_const_lv1_0, icmp_ln879_3_reg_853.read());
}

void streamv::thread_tmp_4_fu_499_p3() {
    tmp_4_fu_499_p3 = esl_concat<1,1>(ap_const_lv1_0, icmp_ln879_4_reg_866.read());
}

void streamv::thread_xor_ln54_fu_667_p2() {
    xor_ln54_fu_667_p2 = (lastvalid_read_reg_800.read() ^ ap_const_lv1_1);
}

void streamv::thread_xor_ln791_1_fu_555_p2() {
    xor_ln791_1_fu_555_p2 = (icmp_ln879_2_reg_839.read() ^ ap_const_lv1_1);
}

void streamv::thread_xor_ln791_fu_527_p2() {
    xor_ln791_fu_527_p2 = (icmp_ln879_4_reg_866.read() ^ ap_const_lv1_1);
}

void streamv::thread_zext_ln544_1_fu_700_p1() {
    zext_ln544_1_fu_700_p1 = esl_zext<64,9>(rdptr_V.read());
}

void streamv::thread_zext_ln544_fu_643_p1() {
    zext_ln544_fu_643_p1 = esl_zext<64,9>(wrptr_V.read());
}

void streamv::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void streamv::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"candin_0_V\" :  \"" << candin_0_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"candin_1_V\" :  \"" << candin_1_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"candin_2_V\" :  \"" << candin_2_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"candin_3_V\" :  \"" << candin_3_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"candout_V\" :  \"" << candout_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"candout_V_ap_vld\" :  \"" << candout_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eventstart\" :  \"" << eventstart.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"lastvalid\" :  \"" << lastvalid.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"first\" :  \"" << first.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"first_ap_vld\" :  \"" << first_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"last\" :  \"" << last.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"last_ap_vld\" :  \"" << last_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

