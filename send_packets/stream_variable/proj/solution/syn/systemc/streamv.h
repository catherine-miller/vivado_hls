// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _streamv_HH_
#define _streamv_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "streamv_mux_42_67bkb.h"
#include "streamv_brams_V_0.h"

namespace ap_rtl {

struct streamv : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > candin_0_V;
    sc_in< sc_lv<64> > candin_1_V;
    sc_in< sc_lv<64> > candin_2_V;
    sc_in< sc_lv<64> > candin_3_V;
    sc_out< sc_lv<64> > candout_V;
    sc_out< sc_logic > candout_V_ap_vld;
    sc_in< sc_logic > eventstart;
    sc_in< sc_logic > lastvalid;
    sc_out< sc_logic > first;
    sc_out< sc_logic > first_ap_vld;
    sc_out< sc_logic > last;
    sc_out< sc_logic > last_ap_vld;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    streamv(sc_module_name name);
    SC_HAS_PROCESS(streamv);

    ~streamv();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    streamv_brams_V_0* brams_V_0_U;
    streamv_brams_V_0* brams_V_1_U;
    streamv_brams_V_0* brams_V_2_U;
    streamv_brams_V_0* brams_V_3_U;
    streamv_mux_42_67bkb<1,1,67,67,67,67,2,67>* streamv_mux_42_67bkb_U1;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > write_r;
    sc_signal< sc_lv<9> > ptrsep_V;
    sc_signal< sc_lv<9> > wrptr_V;
    sc_signal< sc_lv<9> > brams_V_0_address0;
    sc_signal< sc_logic > brams_V_0_ce0;
    sc_signal< sc_logic > brams_V_0_we0;
    sc_signal< sc_lv<67> > brams_V_0_d0;
    sc_signal< sc_lv<9> > brams_V_0_address1;
    sc_signal< sc_logic > brams_V_0_ce1;
    sc_signal< sc_lv<67> > brams_V_0_q1;
    sc_signal< sc_lv<9> > brams_V_1_address0;
    sc_signal< sc_logic > brams_V_1_ce0;
    sc_signal< sc_logic > brams_V_1_we0;
    sc_signal< sc_lv<67> > brams_V_1_d0;
    sc_signal< sc_lv<9> > brams_V_1_address1;
    sc_signal< sc_logic > brams_V_1_ce1;
    sc_signal< sc_lv<67> > brams_V_1_q1;
    sc_signal< sc_lv<9> > brams_V_2_address0;
    sc_signal< sc_logic > brams_V_2_ce0;
    sc_signal< sc_logic > brams_V_2_we0;
    sc_signal< sc_lv<67> > brams_V_2_d0;
    sc_signal< sc_lv<9> > brams_V_2_address1;
    sc_signal< sc_logic > brams_V_2_ce1;
    sc_signal< sc_lv<67> > brams_V_2_q1;
    sc_signal< sc_lv<9> > brams_V_3_address0;
    sc_signal< sc_logic > brams_V_3_ce0;
    sc_signal< sc_logic > brams_V_3_we0;
    sc_signal< sc_lv<67> > brams_V_3_d0;
    sc_signal< sc_lv<9> > brams_V_3_address1;
    sc_signal< sc_logic > brams_V_3_ce1;
    sc_signal< sc_lv<67> > brams_V_3_q1;
    sc_signal< sc_lv<9> > rdptr_V;
    sc_signal< sc_lv<2> > readidx_V;
    sc_signal< sc_lv<9> > t_V_3_reg_260;
    sc_signal< sc_lv<1> > lastvalid_read_reg_800;
    sc_signal< sc_lv<1> > eventstart_read_reg_811;
    sc_signal< sc_lv<64> > candin_0_V_read_reg_818;
    sc_signal< sc_lv<1> > icmp_ln879_fu_337_p2;
    sc_signal< sc_lv<1> > icmp_ln879_reg_824;
    sc_signal< sc_lv<64> > candin_1_V_read_reg_832;
    sc_signal< sc_lv<1> > icmp_ln879_2_fu_343_p2;
    sc_signal< sc_lv<1> > icmp_ln879_2_reg_839;
    sc_signal< sc_lv<64> > candin_2_V_read_reg_847;
    sc_signal< sc_lv<1> > icmp_ln879_3_fu_349_p2;
    sc_signal< sc_lv<1> > icmp_ln879_3_reg_853;
    sc_signal< sc_lv<64> > candin_3_V_read_reg_860;
    sc_signal< sc_lv<1> > icmp_ln879_4_fu_355_p2;
    sc_signal< sc_lv<1> > icmp_ln879_4_reg_866;
    sc_signal< sc_lv<1> > icmp_ln791_fu_367_p2;
    sc_signal< sc_lv<1> > icmp_ln791_reg_874;
    sc_signal< sc_lv<1> > icmp_ln791_1_fu_379_p2;
    sc_signal< sc_lv<1> > icmp_ln791_1_reg_880;
    sc_signal< sc_lv<1> > or_ln27_fu_389_p2;
    sc_signal< sc_lv<1> > or_ln27_reg_885;
    sc_signal< sc_lv<1> > or_ln54_fu_663_p2;
    sc_signal< sc_lv<1> > icmp_ln895_fu_690_p2;
    sc_signal< sc_lv<1> > icmp_ln895_reg_893;
    sc_signal< sc_lv<2> > readidx_V_load_reg_897;
    sc_signal< sc_lv<1> > icmp_ln879_1_fu_712_p2;
    sc_signal< sc_lv<1> > icmp_ln879_1_reg_923;
    sc_signal< sc_lv<9> > add_ln701_fu_730_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<9> > ap_phi_mux_t_V_3_phi_fu_263_p4;
    sc_signal< sc_lv<9> > add_ln700_1_fu_683_p2;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter2_t_V_3_reg_260;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_270;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_270;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter2_ptrsep_V_flag_0_reg_270;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_270;
    sc_signal< sc_lv<1> > ap_phi_mux_ptrsep_V_flag_1_phi_fu_287_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_283;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_283;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter2_ptrsep_V_flag_1_reg_283;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_283;
    sc_signal< sc_lv<9> > ap_phi_mux_ptrsep_V_new_1_phi_fu_298_p4;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_295;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_295;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter2_ptrsep_V_new_1_reg_295;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_295;
    sc_signal< sc_lv<1> > ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_305;
    sc_signal< sc_lv<9> > ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_316;
    sc_signal< sc_lv<1> > ap_phi_mux_p_0202_phi_fu_330_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter3_p_0202_reg_327;
    sc_signal< sc_lv<1> > p_Result_2_fu_749_p1;
    sc_signal< sc_lv<64> > zext_ln544_fu_643_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln544_1_fu_700_p1;
    sc_signal< sc_lv<1> > xor_ln54_fu_667_p2;
    sc_signal< sc_lv<9> > ap_sig_allocacmp_t_V_1;
    sc_signal< sc_lv<9> > add_ln700_fu_651_p2;
    sc_signal< sc_lv<9> > add_ln700_2_fu_718_p2;
    sc_signal< sc_lv<2> > add_ln214_fu_783_p2;
    sc_signal< sc_lv<2> > ap_sig_allocacmp_readidx_V_load;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<64> > or_ln791_fu_361_p2;
    sc_signal< sc_lv<64> > or_ln791_1_fu_373_p2;
    sc_signal< sc_lv<1> > and_ln791_fu_405_p2;
    sc_signal< sc_lv<67> > p_Result_s_fu_394_p5;
    sc_signal< sc_lv<2> > tmp_1_fu_409_p3;
    sc_signal< sc_lv<67> > p_Result_18_1_fu_428_p5;
    sc_signal< sc_lv<2> > tmp_2_fu_439_p3;
    sc_signal< sc_lv<67> > p_Result_18_2_fu_458_p5;
    sc_signal< sc_lv<2> > tmp_3_fu_469_p3;
    sc_signal< sc_lv<67> > p_Result_18_3_fu_488_p5;
    sc_signal< sc_lv<2> > tmp_4_fu_499_p3;
    sc_signal< sc_lv<1> > xor_ln791_fu_527_p2;
    sc_signal< sc_lv<1> > and_ln791_1_fu_532_p2;
    sc_signal< sc_lv<1> > and_ln791_2_fu_560_p2;
    sc_signal< sc_lv<67> > storemerge_fu_518_p5;
    sc_signal< sc_lv<67> > p_Result_3_3_fu_506_p5;
    sc_signal< sc_lv<67> > prep_V_load_s_fu_537_p5;
    sc_signal< sc_lv<67> > p_Result_3_2_fu_476_p5;
    sc_signal< sc_lv<1> > xor_ln791_1_fu_555_p2;
    sc_signal< sc_lv<1> > and_ln791_4_fu_595_p2;
    sc_signal< sc_lv<1> > and_ln791_3_fu_590_p2;
    sc_signal< sc_lv<1> > and_ln791_5_fu_599_p2;
    sc_signal< sc_lv<67> > p_Result_6_2_c_fu_547_p4;
    sc_signal< sc_lv<67> > prep_V_load_4_fu_564_p5;
    sc_signal< sc_lv<67> > select_ln791_fu_605_p3;
    sc_signal< sc_lv<67> > p_Result_3_1_fu_446_p5;
    sc_signal< sc_lv<67> > sel_tmp_fu_621_p5;
    sc_signal< sc_lv<67> > storemerge1_fu_416_p5;
    sc_signal< sc_lv<67> > p_Val2_s_fu_736_p6;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to2;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<67> ap_const_lv67_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_42;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<9> ap_const_lv9_1FF;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln214_fu_783_p2();
    void thread_add_ln700_1_fu_683_p2();
    void thread_add_ln700_2_fu_718_p2();
    void thread_add_ln700_fu_651_p2();
    void thread_add_ln701_fu_730_p2();
    void thread_and_ln791_1_fu_532_p2();
    void thread_and_ln791_2_fu_560_p2();
    void thread_and_ln791_3_fu_590_p2();
    void thread_and_ln791_4_fu_595_p2();
    void thread_and_ln791_5_fu_599_p2();
    void thread_and_ln791_fu_405_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to2();
    void thread_ap_phi_mux_p_0202_phi_fu_330_p4();
    void thread_ap_phi_mux_ptrsep_V_flag_1_phi_fu_287_p4();
    void thread_ap_phi_mux_ptrsep_V_flag_2_phi_fu_308_p4();
    void thread_ap_phi_mux_ptrsep_V_new_1_phi_fu_298_p4();
    void thread_ap_phi_mux_ptrsep_V_new_2_phi_fu_319_p4();
    void thread_ap_phi_mux_t_V_3_phi_fu_263_p4();
    void thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_270();
    void thread_ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_283();
    void thread_ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_295();
    void thread_ap_phi_reg_pp0_iter2_t_V_3_reg_260();
    void thread_ap_phi_reg_pp0_iter3_p_0202_reg_327();
    void thread_ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_305();
    void thread_ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_316();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_ap_sig_allocacmp_readidx_V_load();
    void thread_ap_sig_allocacmp_t_V_1();
    void thread_brams_V_0_address0();
    void thread_brams_V_0_address1();
    void thread_brams_V_0_ce0();
    void thread_brams_V_0_ce1();
    void thread_brams_V_0_d0();
    void thread_brams_V_0_we0();
    void thread_brams_V_1_address0();
    void thread_brams_V_1_address1();
    void thread_brams_V_1_ce0();
    void thread_brams_V_1_ce1();
    void thread_brams_V_1_d0();
    void thread_brams_V_1_we0();
    void thread_brams_V_2_address0();
    void thread_brams_V_2_address1();
    void thread_brams_V_2_ce0();
    void thread_brams_V_2_ce1();
    void thread_brams_V_2_d0();
    void thread_brams_V_2_we0();
    void thread_brams_V_3_address0();
    void thread_brams_V_3_address1();
    void thread_brams_V_3_ce0();
    void thread_brams_V_3_ce1();
    void thread_brams_V_3_d0();
    void thread_brams_V_3_we0();
    void thread_candout_V();
    void thread_candout_V_ap_vld();
    void thread_first();
    void thread_first_ap_vld();
    void thread_icmp_ln791_1_fu_379_p2();
    void thread_icmp_ln791_fu_367_p2();
    void thread_icmp_ln879_1_fu_712_p2();
    void thread_icmp_ln879_2_fu_343_p2();
    void thread_icmp_ln879_3_fu_349_p2();
    void thread_icmp_ln879_4_fu_355_p2();
    void thread_icmp_ln879_fu_337_p2();
    void thread_icmp_ln895_fu_690_p2();
    void thread_last();
    void thread_last_ap_vld();
    void thread_or_ln27_fu_389_p2();
    void thread_or_ln54_fu_663_p2();
    void thread_or_ln791_1_fu_373_p2();
    void thread_or_ln791_fu_361_p2();
    void thread_p_Result_18_1_fu_428_p5();
    void thread_p_Result_18_2_fu_458_p5();
    void thread_p_Result_18_3_fu_488_p5();
    void thread_p_Result_2_fu_749_p1();
    void thread_p_Result_3_1_fu_446_p5();
    void thread_p_Result_3_2_fu_476_p5();
    void thread_p_Result_3_3_fu_506_p5();
    void thread_p_Result_6_2_c_fu_547_p4();
    void thread_p_Result_s_fu_394_p5();
    void thread_prep_V_load_4_fu_564_p5();
    void thread_prep_V_load_s_fu_537_p5();
    void thread_sel_tmp_fu_621_p5();
    void thread_select_ln791_fu_605_p3();
    void thread_storemerge1_fu_416_p5();
    void thread_storemerge_fu_518_p5();
    void thread_tmp_1_fu_409_p3();
    void thread_tmp_2_fu_439_p3();
    void thread_tmp_3_fu_469_p3();
    void thread_tmp_4_fu_499_p3();
    void thread_xor_ln54_fu_667_p2();
    void thread_xor_ln791_1_fu_555_p2();
    void thread_xor_ln791_fu_527_p2();
    void thread_zext_ln544_1_fu_700_p1();
    void thread_zext_ln544_fu_643_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
