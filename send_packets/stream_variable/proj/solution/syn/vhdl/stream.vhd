-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    candin_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    candin_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    candin_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    candin_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    candout_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    candout_V_ap_vld : OUT STD_LOGIC;
    eventstart : IN STD_LOGIC;
    lastvalid : IN STD_LOGIC;
    first : OUT STD_LOGIC;
    first_ap_vld : OUT STD_LOGIC;
    last : OUT STD_LOGIC;
    last_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of stream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "stream,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2104-2L-e,HLS_INPUT_CLOCK=2.778000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.154000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=345,HLS_SYN_LUT=838,HLS_VERSION=2019_2_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv67_0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal write_r : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ptrsep_V : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal wrptr_V : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal brams_V_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_0_ce0 : STD_LOGIC;
    signal brams_V_0_we0 : STD_LOGIC;
    signal brams_V_0_d0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_0_ce1 : STD_LOGIC;
    signal brams_V_0_q1 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_1_ce0 : STD_LOGIC;
    signal brams_V_1_we0 : STD_LOGIC;
    signal brams_V_1_d0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_1_ce1 : STD_LOGIC;
    signal brams_V_1_q1 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_2_ce0 : STD_LOGIC;
    signal brams_V_2_we0 : STD_LOGIC;
    signal brams_V_2_d0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_2_ce1 : STD_LOGIC;
    signal brams_V_2_q1 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_3_ce0 : STD_LOGIC;
    signal brams_V_3_we0 : STD_LOGIC;
    signal brams_V_3_d0 : STD_LOGIC_VECTOR (66 downto 0);
    signal brams_V_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal brams_V_3_ce1 : STD_LOGIC;
    signal brams_V_3_q1 : STD_LOGIC_VECTOR (66 downto 0);
    signal rdptr_V : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal readidx_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal t_V_3_reg_258 : STD_LOGIC_VECTOR (8 downto 0);
    signal lastvalid_read_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal eventstart_read_reg_783 : STD_LOGIC_VECTOR (0 downto 0);
    signal candin_0_V_read_reg_789 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln879_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_795 : STD_LOGIC_VECTOR (0 downto 0);
    signal candin_1_V_read_reg_803 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln879_2_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_808 : STD_LOGIC_VECTOR (0 downto 0);
    signal candin_2_V_read_reg_814 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln879_4_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_reg_819 : STD_LOGIC_VECTOR (0 downto 0);
    signal candin_3_V_read_reg_825 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln879_3_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_reg_830 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln791_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln791_reg_836 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln791_1_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln791_1_reg_841 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_reg_847 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln69_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_reg_855 : STD_LOGIC_VECTOR (0 downto 0);
    signal readidx_V_load_reg_859 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_1_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_885 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln701_fu_702_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_t_V_3_phi_fu_261_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln700_1_fu_655_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter2_t_V_3_reg_258 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_ptrsep_V_flag_0_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ptrsep_V_flag_1_phi_fu_285_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_ptrsep_V_flag_1_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ptrsep_V_new_1_phi_fu_296_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_293 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_293 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter2_ptrsep_V_new_1_reg_293 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_293 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_ptrsep_V_flag_2_phi_fu_306_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_303 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ptrsep_V_new_2_phi_fu_317_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_314 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_0202_phi_fu_328_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0202_reg_325 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_721_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln544_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln544_1_fu_672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln69_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_t_V_1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln700_fu_623_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln700_2_fu_690_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln214_fu_755_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_readidx_V_load : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal or_ln791_fu_359_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_18_1_fu_397_p5 : STD_LOGIC_VECTOR (66 downto 0);
    signal xor_ln879_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_18_2_fu_423_p5 : STD_LOGIC_VECTOR (66 downto 0);
    signal p_Result_18_3_fu_443_p5 : STD_LOGIC_VECTOR (66 downto 0);
    signal xor_ln879_1_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_386_p5 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_1_fu_469_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_459_p4 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_2_fu_434_p4 : STD_LOGIC_VECTOR (66 downto 0);
    signal and_ln791_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln791_1_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln791_2_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_488_p4 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_5_fu_502_p4 : STD_LOGIC_VECTOR (66 downto 0);
    signal xor_ln791_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln791_3_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln791_2_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln791_4_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln791_1_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln791_1_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_413_p4 : STD_LOGIC_VECTOR (66 downto 0);
    signal and_ln791_5_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_575_p4 : STD_LOGIC_VECTOR (66 downto 0);
    signal sel_tmp1_fu_593_p5 : STD_LOGIC_VECTOR (66 downto 0);
    signal p_Result_3_3_fu_476_p5 : STD_LOGIC_VECTOR (66 downto 0);
    signal p_Val2_s_fu_708_p6 : STD_LOGIC_VECTOR (66 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component stream_mux_42_67_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (66 downto 0);
        din1 : IN STD_LOGIC_VECTOR (66 downto 0);
        din2 : IN STD_LOGIC_VECTOR (66 downto 0);
        din3 : IN STD_LOGIC_VECTOR (66 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (66 downto 0) );
    end component;


    component stream_brams_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (66 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (66 downto 0) );
    end component;



begin
    brams_V_0_U : component stream_brams_V_0
    generic map (
        DataWidth => 67,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => brams_V_0_address0,
        ce0 => brams_V_0_ce0,
        we0 => brams_V_0_we0,
        d0 => brams_V_0_d0,
        address1 => brams_V_0_address1,
        ce1 => brams_V_0_ce1,
        q1 => brams_V_0_q1);

    brams_V_1_U : component stream_brams_V_0
    generic map (
        DataWidth => 67,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => brams_V_1_address0,
        ce0 => brams_V_1_ce0,
        we0 => brams_V_1_we0,
        d0 => brams_V_1_d0,
        address1 => brams_V_1_address1,
        ce1 => brams_V_1_ce1,
        q1 => brams_V_1_q1);

    brams_V_2_U : component stream_brams_V_0
    generic map (
        DataWidth => 67,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => brams_V_2_address0,
        ce0 => brams_V_2_ce0,
        we0 => brams_V_2_we0,
        d0 => brams_V_2_d0,
        address1 => brams_V_2_address1,
        ce1 => brams_V_2_ce1,
        q1 => brams_V_2_q1);

    brams_V_3_U : component stream_brams_V_0
    generic map (
        DataWidth => 67,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => brams_V_3_address0,
        ce0 => brams_V_3_ce0,
        we0 => brams_V_3_we0,
        d0 => brams_V_3_d0,
        address1 => brams_V_3_address1,
        ce1 => brams_V_3_ce1,
        q1 => brams_V_3_q1);

    stream_mux_42_67_bkb_U1 : component stream_mux_42_67_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 67,
        din1_WIDTH => 67,
        din2_WIDTH => 67,
        din3_WIDTH => 67,
        din4_WIDTH => 2,
        dout_WIDTH => 67)
    port map (
        din0 => brams_V_0_q1,
        din1 => brams_V_1_q1,
        din2 => brams_V_2_q1,
        din3 => brams_V_3_q1,
        din4 => readidx_V_load_reg_859,
        dout => p_Val2_s_fu_708_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if ((or_ln27_reg_847 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_268 <= ap_const_lv1_0;
                elsif ((or_ln27_reg_847 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_268 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_268 <= ap_phi_reg_pp0_iter2_ptrsep_V_flag_0_reg_268;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((icmp_ln895_fu_662_p2 = ap_const_lv1_0) and (icmp_ln879_1_fu_684_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_281 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_281 <= ap_phi_reg_pp0_iter2_ptrsep_V_flag_1_reg_281;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((icmp_ln895_fu_662_p2 = ap_const_lv1_0) and (icmp_ln879_1_fu_684_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_293 <= add_ln701_fu_702_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_293 <= ap_phi_reg_pp0_iter2_ptrsep_V_new_1_reg_293;
                end if;
            end if; 
        end if;
    end process;

    t_V_3_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if ((or_ln27_reg_847 = ap_const_lv1_0)) then 
                    t_V_3_reg_258 <= ap_sig_allocacmp_t_V_1;
                elsif ((or_ln27_reg_847 = ap_const_lv1_1)) then 
                    t_V_3_reg_258 <= add_ln700_1_fu_655_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    t_V_3_reg_258 <= ap_phi_reg_pp0_iter2_t_V_3_reg_258;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_268 <= ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_268;
                ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_281 <= ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_281;
                ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_293 <= ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_293;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_ptrsep_V_flag_0_reg_268 <= ap_phi_reg_pp0_iter1_ptrsep_V_flag_0_reg_268;
                ap_phi_reg_pp0_iter2_ptrsep_V_flag_1_reg_281 <= ap_phi_reg_pp0_iter1_ptrsep_V_flag_1_reg_281;
                ap_phi_reg_pp0_iter2_ptrsep_V_new_1_reg_293 <= ap_phi_reg_pp0_iter1_ptrsep_V_new_1_reg_293;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                candin_0_V_read_reg_789 <= candin_0_V;
                candin_1_V_read_reg_803 <= candin_1_V;
                candin_2_V_read_reg_814 <= candin_2_V;
                candin_3_V_read_reg_825 <= candin_3_V;
                eventstart_read_reg_783 <= (0=>eventstart, others=>'-');
                icmp_ln791_1_reg_841 <= icmp_ln791_1_fu_371_p2;
                icmp_ln791_reg_836 <= icmp_ln791_fu_365_p2;
                icmp_ln879_2_reg_808 <= icmp_ln879_2_fu_341_p2;
                icmp_ln879_3_reg_830 <= icmp_ln879_3_fu_353_p2;
                icmp_ln879_4_reg_819 <= icmp_ln879_4_fu_347_p2;
                icmp_ln879_reg_795 <= icmp_ln879_fu_335_p2;
                lastvalid_read_reg_772 <= (0=>lastvalid, others=>'-');
                or_ln27_reg_847 <= or_ln27_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln895_fu_662_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_1_reg_885 <= icmp_ln879_1_fu_684_p2;
                readidx_V_load_reg_859 <= ap_sig_allocacmp_readidx_V_load;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln895_reg_855 <= icmp_ln895_fu_662_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_phi_mux_ptrsep_V_flag_2_phi_fu_306_p4 = ap_const_lv1_1))) then
                ptrsep_V <= ap_phi_mux_ptrsep_V_new_2_phi_fu_317_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln895_fu_662_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_1_fu_684_p2 = ap_const_lv1_1))) then
                rdptr_V <= add_ln700_2_fu_690_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln895_reg_855 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                readidx_V <= add_ln214_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln69_fu_635_p2 = ap_const_lv1_1))) then
                write_r <= xor_ln69_fu_639_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln27_fu_381_p2 = ap_const_lv1_1))) then
                wrptr_V <= add_ln700_fu_623_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln214_fu_755_p2 <= std_logic_vector(unsigned(readidx_V_load_reg_859) + unsigned(ap_const_lv2_1));
    add_ln700_1_fu_655_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_t_V_1) + unsigned(ap_const_lv9_1));
    add_ln700_2_fu_690_p2 <= std_logic_vector(unsigned(rdptr_V) + unsigned(ap_const_lv9_1));
    add_ln700_fu_623_p2 <= std_logic_vector(unsigned(wrptr_V) + unsigned(ap_const_lv9_1));
    add_ln701_fu_702_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_3_phi_fu_261_p4) + unsigned(ap_const_lv9_1FF));
    and_ln791_1_fu_522_p2 <= (or_ln791_2_fu_517_p2 and icmp_ln791_reg_836);
    and_ln791_2_fu_548_p2 <= (lastvalid_read_reg_772 and icmp_ln879_2_reg_808);
    and_ln791_3_fu_552_p2 <= (xor_ln791_fu_543_p2 and icmp_ln879_reg_795);
    and_ln791_4_fu_557_p2 <= (and_ln791_3_fu_552_p2 and and_ln791_2_fu_548_p2);
    and_ln791_5_fu_569_p2 <= (xor_ln791_1_fu_563_p2 and and_ln791_1_fu_522_p2);
    and_ln791_fu_498_p2 <= (icmp_ln879_4_reg_819 and icmp_ln879_3_reg_830);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0202_phi_fu_328_p4_assign_proc : process(icmp_ln895_reg_855, ap_phi_reg_pp0_iter3_p_0202_reg_325, p_Result_2_fu_721_p1)
    begin
        if ((icmp_ln895_reg_855 = ap_const_lv1_0)) then 
            ap_phi_mux_p_0202_phi_fu_328_p4 <= p_Result_2_fu_721_p1;
        elsif ((icmp_ln895_reg_855 = ap_const_lv1_1)) then 
            ap_phi_mux_p_0202_phi_fu_328_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_p_0202_phi_fu_328_p4 <= ap_phi_reg_pp0_iter3_p_0202_reg_325;
        end if; 
    end process;


    ap_phi_mux_ptrsep_V_flag_1_phi_fu_285_p4_assign_proc : process(icmp_ln895_reg_855, icmp_ln879_1_reg_885, ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_268, ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_281)
    begin
        if (((icmp_ln879_1_reg_885 = ap_const_lv1_0) and (icmp_ln895_reg_855 = ap_const_lv1_0))) then 
            ap_phi_mux_ptrsep_V_flag_1_phi_fu_285_p4 <= ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_268;
        else 
            ap_phi_mux_ptrsep_V_flag_1_phi_fu_285_p4 <= ap_phi_reg_pp0_iter3_ptrsep_V_flag_1_reg_281;
        end if; 
    end process;


    ap_phi_mux_ptrsep_V_flag_2_phi_fu_306_p4_assign_proc : process(icmp_ln895_reg_855, ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_268, ap_phi_mux_ptrsep_V_flag_1_phi_fu_285_p4, ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_303)
    begin
        if ((icmp_ln895_reg_855 = ap_const_lv1_0)) then 
            ap_phi_mux_ptrsep_V_flag_2_phi_fu_306_p4 <= ap_phi_mux_ptrsep_V_flag_1_phi_fu_285_p4;
        elsif ((icmp_ln895_reg_855 = ap_const_lv1_1)) then 
            ap_phi_mux_ptrsep_V_flag_2_phi_fu_306_p4 <= ap_phi_reg_pp0_iter3_ptrsep_V_flag_0_reg_268;
        else 
            ap_phi_mux_ptrsep_V_flag_2_phi_fu_306_p4 <= ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_303;
        end if; 
    end process;


    ap_phi_mux_ptrsep_V_new_1_phi_fu_296_p4_assign_proc : process(t_V_3_reg_258, icmp_ln895_reg_855, icmp_ln879_1_reg_885, ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_293)
    begin
        if (((icmp_ln879_1_reg_885 = ap_const_lv1_0) and (icmp_ln895_reg_855 = ap_const_lv1_0))) then 
            ap_phi_mux_ptrsep_V_new_1_phi_fu_296_p4 <= t_V_3_reg_258;
        else 
            ap_phi_mux_ptrsep_V_new_1_phi_fu_296_p4 <= ap_phi_reg_pp0_iter3_ptrsep_V_new_1_reg_293;
        end if; 
    end process;


    ap_phi_mux_ptrsep_V_new_2_phi_fu_317_p4_assign_proc : process(icmp_ln895_reg_855, ap_phi_mux_ptrsep_V_new_1_phi_fu_296_p4, ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_314)
    begin
        if ((icmp_ln895_reg_855 = ap_const_lv1_0)) then 
            ap_phi_mux_ptrsep_V_new_2_phi_fu_317_p4 <= ap_phi_mux_ptrsep_V_new_1_phi_fu_296_p4;
        elsif ((icmp_ln895_reg_855 = ap_const_lv1_1)) then 
            ap_phi_mux_ptrsep_V_new_2_phi_fu_317_p4 <= ap_const_lv9_0;
        else 
            ap_phi_mux_ptrsep_V_new_2_phi_fu_317_p4 <= ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_314;
        end if; 
    end process;


    ap_phi_mux_t_V_3_phi_fu_261_p4_assign_proc : process(or_ln27_reg_847, add_ln700_1_fu_655_p2, ap_phi_reg_pp0_iter2_t_V_3_reg_258, ap_sig_allocacmp_t_V_1)
    begin
        if ((or_ln27_reg_847 = ap_const_lv1_0)) then 
            ap_phi_mux_t_V_3_phi_fu_261_p4 <= ap_sig_allocacmp_t_V_1;
        elsif ((or_ln27_reg_847 = ap_const_lv1_1)) then 
            ap_phi_mux_t_V_3_phi_fu_261_p4 <= add_ln700_1_fu_655_p2;
        else 
            ap_phi_mux_t_V_3_phi_fu_261_p4 <= ap_phi_reg_pp0_iter2_t_V_3_reg_258;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_ptrsep_V_flag_0_reg_268 <= "X";
    ap_phi_reg_pp0_iter0_ptrsep_V_flag_1_reg_281 <= "X";
    ap_phi_reg_pp0_iter0_ptrsep_V_new_1_reg_293 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter2_t_V_3_reg_258 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter3_p_0202_reg_325 <= "X";
    ap_phi_reg_pp0_iter3_ptrsep_V_flag_2_reg_303 <= "X";
    ap_phi_reg_pp0_iter3_ptrsep_V_new_2_reg_314 <= "XXXXXXXXX";

    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_phi_mux_p_0202_phi_fu_328_p4;

    ap_sig_allocacmp_readidx_V_load_assign_proc : process(ap_enable_reg_pp0_iter3, readidx_V, icmp_ln895_reg_855, ap_block_pp0_stage0, add_ln214_fu_755_p2)
    begin
        if (((icmp_ln895_reg_855 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_readidx_V_load <= add_ln214_fu_755_p2;
        else 
            ap_sig_allocacmp_readidx_V_load <= readidx_V;
        end if; 
    end process;


    ap_sig_allocacmp_t_V_1_assign_proc : process(ap_enable_reg_pp0_iter3, ptrsep_V, ap_phi_mux_ptrsep_V_flag_2_phi_fu_306_p4, ap_phi_mux_ptrsep_V_new_2_phi_fu_317_p4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_phi_mux_ptrsep_V_flag_2_phi_fu_306_p4 = ap_const_lv1_1))) then 
            ap_sig_allocacmp_t_V_1 <= ap_phi_mux_ptrsep_V_new_2_phi_fu_317_p4;
        else 
            ap_sig_allocacmp_t_V_1 <= ptrsep_V;
        end if; 
    end process;

    brams_V_0_address0 <= zext_ln544_fu_615_p1(9 - 1 downto 0);
    brams_V_0_address1 <= zext_ln544_1_fu_672_p1(9 - 1 downto 0);

    brams_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            brams_V_0_ce0 <= ap_const_logic_1;
        else 
            brams_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    brams_V_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            brams_V_0_ce1 <= ap_const_logic_1;
        else 
            brams_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_0_d0 <= 
        sel_tmp1_fu_593_p5 when (lastvalid_read_reg_772(0) = '1') else 
        p_Result_3_3_fu_476_p5;

    brams_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, or_ln27_fu_381_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln27_fu_381_p2 = ap_const_lv1_1))) then 
            brams_V_0_we0 <= ap_const_logic_1;
        else 
            brams_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_1_address0 <= zext_ln544_fu_615_p1(9 - 1 downto 0);
    brams_V_1_address1 <= zext_ln544_1_fu_672_p1(9 - 1 downto 0);

    brams_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            brams_V_1_ce0 <= ap_const_logic_1;
        else 
            brams_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    brams_V_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            brams_V_1_ce1 <= ap_const_logic_1;
        else 
            brams_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_1_d0 <= 
        tmp_6_fu_575_p4 when (lastvalid_read_reg_772(0) = '1') else 
        tmp_fu_413_p4;

    brams_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, or_ln27_fu_381_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln27_fu_381_p2 = ap_const_lv1_1))) then 
            brams_V_1_we0 <= ap_const_logic_1;
        else 
            brams_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_2_address0 <= zext_ln544_fu_615_p1(9 - 1 downto 0);
    brams_V_2_address1 <= zext_ln544_1_fu_672_p1(9 - 1 downto 0);

    brams_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            brams_V_2_ce0 <= ap_const_logic_1;
        else 
            brams_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    brams_V_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            brams_V_2_ce1 <= ap_const_logic_1;
        else 
            brams_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_2_d0 <= 
        tmp_5_fu_502_p4 when (lastvalid_read_reg_772(0) = '1') else 
        tmp_2_fu_434_p4;

    brams_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, or_ln27_fu_381_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln27_fu_381_p2 = ap_const_lv1_1))) then 
            brams_V_2_we0 <= ap_const_logic_1;
        else 
            brams_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_3_address0 <= zext_ln544_fu_615_p1(9 - 1 downto 0);
    brams_V_3_address1 <= zext_ln544_1_fu_672_p1(9 - 1 downto 0);

    brams_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            brams_V_3_ce0 <= ap_const_logic_1;
        else 
            brams_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    brams_V_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            brams_V_3_ce1 <= ap_const_logic_1;
        else 
            brams_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    brams_V_3_d0 <= 
        tmp_4_fu_488_p4 when (lastvalid_read_reg_772(0) = '1') else 
        tmp_3_fu_459_p4;

    brams_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, or_ln27_fu_381_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln27_fu_381_p2 = ap_const_lv1_1))) then 
            brams_V_3_we0 <= ap_const_logic_1;
        else 
            brams_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    candout_V_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln895_reg_855, ap_block_pp0_stage0_01001, p_Val2_s_fu_708_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((icmp_ln895_reg_855 = ap_const_lv1_1)) then 
                candout_V <= ap_const_lv64_0;
            elsif ((icmp_ln895_reg_855 = ap_const_lv1_0)) then 
                candout_V <= p_Val2_s_fu_708_p6(66 downto 3);
            else 
                candout_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            candout_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    candout_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln895_reg_855)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln895_reg_855 = ap_const_lv1_1)) or ((icmp_ln895_reg_855 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            candout_V_ap_vld <= ap_const_logic_1;
        else 
            candout_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    first_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln895_reg_855, ap_block_pp0_stage0_01001, p_Val2_s_fu_708_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((icmp_ln895_reg_855 = ap_const_lv1_1)) then 
                first <= ap_const_logic_0;
            elsif ((icmp_ln895_reg_855 = ap_const_lv1_0)) then 
                first <= p_Val2_s_fu_708_p6(1);
            else 
                first <= 'X';
            end if;
        else 
            first <= 'X';
        end if; 
    end process;


    first_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln895_reg_855)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln895_reg_855 = ap_const_lv1_1)) or ((icmp_ln895_reg_855 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            first_ap_vld <= ap_const_logic_1;
        else 
            first_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln791_1_fu_371_p2 <= "0" when (or_ln791_fu_359_p2 = ap_const_lv64_0) else "1";
    icmp_ln791_fu_365_p2 <= "1" when (or_ln791_fu_359_p2 = ap_const_lv64_0) else "0";
    icmp_ln879_1_fu_684_p2 <= "1" when (ap_sig_allocacmp_readidx_V_load = ap_const_lv2_3) else "0";
    icmp_ln879_2_fu_341_p2 <= "1" when (candin_1_V = ap_const_lv64_0) else "0";
    icmp_ln879_3_fu_353_p2 <= "1" when (candin_3_V = ap_const_lv64_0) else "0";
    icmp_ln879_4_fu_347_p2 <= "0" when (candin_2_V = ap_const_lv64_0) else "1";
    icmp_ln879_fu_335_p2 <= "0" when (candin_0_V = ap_const_lv64_0) else "1";
    icmp_ln895_fu_662_p2 <= "1" when (ap_phi_mux_t_V_3_phi_fu_261_p4 = ap_const_lv9_0) else "0";

    last_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln895_reg_855, ap_block_pp0_stage0_01001, p_Val2_s_fu_708_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((icmp_ln895_reg_855 = ap_const_lv1_1)) then 
                last <= ap_const_logic_0;
            elsif ((icmp_ln895_reg_855 = ap_const_lv1_0)) then 
                last <= p_Val2_s_fu_708_p6(2);
            else 
                last <= 'X';
            end if;
        else 
            last <= 'X';
        end if; 
    end process;


    last_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln895_reg_855)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln895_reg_855 = ap_const_lv1_1)) or ((icmp_ln895_reg_855 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            last_ap_vld <= ap_const_logic_1;
        else 
            last_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln27_fu_381_p2 <= (write_r or eventstart_read_reg_783);
    or_ln69_fu_635_p2 <= (lastvalid_read_reg_772 or eventstart_read_reg_783);
    or_ln791_1_fu_512_p2 <= (xor_ln879_fu_408_p2 or icmp_ln879_reg_795);
    or_ln791_2_fu_517_p2 <= (or_ln791_1_fu_512_p2 or icmp_ln791_1_reg_841);
    or_ln791_fu_359_p2 <= (candin_3_V or candin_2_V);
    p_Result_18_1_fu_397_p5 <= (candin_1_V_read_reg_803 & ap_const_lv67_0(2 downto 0));
    p_Result_18_2_fu_423_p5 <= (candin_2_V_read_reg_814 & ap_const_lv67_0(2 downto 0));
    p_Result_18_3_fu_443_p5 <= (candin_3_V_read_reg_825 & ap_const_lv67_0(2 downto 0));
    p_Result_2_fu_721_p1 <= p_Val2_s_fu_708_p6(1 - 1 downto 0);
    p_Result_3_3_fu_476_p5 <= (p_Result_s_fu_386_p5(66 downto 2) & tmp_1_fu_469_p3);
    p_Result_s_fu_386_p5 <= (candin_0_V_read_reg_789 & ap_const_lv67_0(2 downto 0));
    sel_tmp1_fu_593_p5 <= (((candin_0_V_read_reg_789 & and_ln791_4_fu_557_p2) & ap_const_lv1_0) & icmp_ln879_reg_795);
    tmp_1_fu_469_p3 <= (ap_const_lv1_0 & icmp_ln879_reg_795);
    
    tmp_2_fu_434_p4_proc : process(p_Result_18_2_fu_423_p5, icmp_ln879_4_reg_819)
    begin
        tmp_2_fu_434_p4 <= p_Result_18_2_fu_423_p5;
        tmp_2_fu_434_p4(0) <= icmp_ln879_4_reg_819(0);
    end process;

    
    tmp_3_fu_459_p4_proc : process(p_Result_18_3_fu_443_p5, xor_ln879_1_fu_454_p2)
    begin
        tmp_3_fu_459_p4 <= p_Result_18_3_fu_443_p5;
        tmp_3_fu_459_p4(0) <= xor_ln879_1_fu_454_p2(0);
    end process;

    
    tmp_4_fu_488_p4_proc : process(tmp_3_fu_459_p4, xor_ln879_1_fu_454_p2)
    begin
        tmp_4_fu_488_p4 <= tmp_3_fu_459_p4;
        tmp_4_fu_488_p4(2) <= xor_ln879_1_fu_454_p2(0);
    end process;

    
    tmp_5_fu_502_p4_proc : process(tmp_2_fu_434_p4, and_ln791_fu_498_p2)
    begin
        tmp_5_fu_502_p4 <= tmp_2_fu_434_p4;
        tmp_5_fu_502_p4(2) <= and_ln791_fu_498_p2(0);
    end process;

    
    tmp_6_fu_575_p4_proc : process(tmp_fu_413_p4, and_ln791_5_fu_569_p2)
    begin
        tmp_6_fu_575_p4 <= tmp_fu_413_p4;
        tmp_6_fu_575_p4(2) <= and_ln791_5_fu_569_p2(0);
    end process;

    
    tmp_fu_413_p4_proc : process(p_Result_18_1_fu_397_p5, xor_ln879_fu_408_p2)
    begin
        tmp_fu_413_p4 <= p_Result_18_1_fu_397_p5;
        tmp_fu_413_p4(0) <= xor_ln879_fu_408_p2(0);
    end process;

    xor_ln69_fu_639_p2 <= (lastvalid_read_reg_772 xor ap_const_lv1_1);
    xor_ln791_1_fu_563_p2 <= (ap_const_lv1_1 xor and_ln791_4_fu_557_p2);
    xor_ln791_fu_543_p2 <= (icmp_ln791_1_reg_841 xor ap_const_lv1_1);
    xor_ln879_1_fu_454_p2 <= (icmp_ln879_3_reg_830 xor ap_const_lv1_1);
    xor_ln879_fu_408_p2 <= (icmp_ln879_2_reg_808 xor ap_const_lv1_1);
    zext_ln544_1_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rdptr_V),64));
    zext_ln544_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wrptr_V),64));
end behav;
